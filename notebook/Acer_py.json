{
	"name": "Acer_py",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2b9ebfc0-07a2-4ef7-baeb-82bf0beb220b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/09921ef6-5d34-4a25-a233-84ffa9485571/resourceGroups/rg-oea-tceooeadev01/providers/Microsoft.Synapse/workspaces/syn-oea-tceooeadev01/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://syn-oea-tceooeadev01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# class Acer(BaseOEAModule):\r\n",
					"#     def __init__(self, source_folder='acer_test', pseudonymize = True):\r\n",
					"#         BaseOEAModule.__init__(self, source_folder, pseudonymize)\r\n",
					"#         self.schemas['student_acer'] = [['SKACERStudent', 'integer', 'no-op'],\r\n",
					"#                                         ['BKACERStudent', 'string', 'no-op'],\r\n",
					"#                                         ['SystemID', 'string', 'no-op'],\r\n",
					"#                                         ['PersistentStudentID', 'integer', 'no-op'],\r\n",
					"#                                         ['FamilyName', 'string', 'no-op'],\r\n",
					"#                                         ['GivenName', 'string', 'no-op'],\r\n",
					"#                                         ['DateOfBirth', 'date', 'no-op'],\r\n",
					"#                                         ['Gender', 'string', 'no-op'],\r\n",
					"#                                         ['GenderId', 'integer', 'no-op'],\r\n",
					"#                                         ['Username', 'string', 'no-op'],\r\n",
					"#                                         ['Password', 'string', 'no-op'],\r\n",
					"#                                         ['CampusId', 'integer', 'no-op'],\r\n",
					"#                                         ['CreateDate', 'string', 'no-op'],\r\n",
					"#                                         ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"#                                         ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"#                                         ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"#                                         ['Iscurrent', 'integer', 'no-op'],\r\n",
					"#                                         ['SCDReason', 'string', 'no-op']]                                          \r\n",
					"\r\n",
					"#     def ingest(self):\r\n",
					"#         oea.ingest_delta_data(self.source_folder, 'DMAcerStudent', self.schemas['student_acer'], None, 'SKACERStudent')\r\n",
					"\r\n",
					"#         #oea.ingest_incremental_data(self.source_folder, 'student', self.schemas['student'], 'name', 'id')\r\n",
					"#         #oea.ingest_snapshot_data(self.source_folder, 'studentsectionmark', self.schemas['studentsectionmark'], 'school_year', 'id')\r\n",
					"#         #oea.ingest_delta_data(self.source_folder, 'studentdemographics', self.schemas['studentdemographics'], 'school_year', 'id')\r\n",
					"\r\n",
					"# acer = Acer()\r\n",
					"\r\n",
					"class Acer_object(BaseOEAModule):\r\n",
					"    def __init__(self, source_folder='ACER', pseudonymize = True):\r\n",
					"        BaseOEAModule.__init__(self, source_folder, pseudonymize)\r\n",
					"\r\n",
					"        self.schemas['DMACERStanine'] = [\r\n",
					"                                        ['SKACERStanine', 'integer', 'no-op'],\r\n",
					"                                        ['BKACERStanine', 'integer', 'no-op'],\r\n",
					"                                        ['StanineNumber', 'integer', 'no-op'],\r\n",
					"                                        ['StanineNumberDescription', 'string', 'no-op'],\r\n",
					"                                        ['StanineAchievementDescriptor', 'string', 'no-op'],\r\n",
					"                                        ['PercentileRank', 'string', 'no-op'],\r\n",
					"                                        ['PercentageOfStudents', 'double', 'no-op'],\r\n",
					"                                        ['PrimarySort', 'double', 'no-op'],\r\n",
					"                                        ['SecondarySort', 'double', 'no-op'],\r\n",
					"                                        ['CreateDate', 'string', 'no-op'],\r\n",
					"                                        ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"                                        ['IsCurrent', 'integer', 'no-op'],\r\n",
					"                                        ['ScdReason', 'string', 'no-op']                                                                    \r\n",
					"                                        ]\r\n",
					"\r\n",
					"        self.schemas['DMACERStudent'] = [\r\n",
					"                                        ['SKACERStudent', 'integer', 'no-op'],\r\n",
					"                                        ['BKACERStudent', 'string', 'no-op'],\r\n",
					"                                        ['SystemId', 'string', 'no-op'],\r\n",
					"                                        ['PersistentStudentId', 'integer', 'no-op'],\r\n",
					"                                        ['FamilyName', 'string', 'hash'],\r\n",
					"                                        ['GivenName', 'string', 'hash'],\r\n",
					"                                        ['DateOfBirth', 'date', 'hash'],\r\n",
					"                                        ['Gender', 'string', 'hash'],\r\n",
					"                                        ['GenderId', 'integer', 'hash'],\r\n",
					"                                        ['Username', 'string', 'hash'],\r\n",
					"                                        ['Password', 'string', 'hash'],\r\n",
					"                                        ['CampusId', 'integer', 'no-op'],\r\n",
					"                                        ['CreateDate', 'string', 'no-op'],\r\n",
					"                                        ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"                                        ['Iscurrent', 'integer', 'no-op'],\r\n",
					"                                        ['SCDReason', 'string', 'no-op']                                                                 \r\n",
					"                                        ]\r\n",
					"\r\n",
					"        self.schemas['DMFactPATResponse'] = [\r\n",
					"                                        ['SKPATResponse', 'integer', 'no-op'],\r\n",
					"                                        ['SKPATStudentResponseGrouping', 'integer', 'no-op'],\r\n",
					"                                        ['SKCampus', 'integer', 'no-op'],\r\n",
					"                                        ['SKYear', 'integer', 'no-op'],\r\n",
					"                                        ['SKDate', 'integer', 'no-op'],\r\n",
					"                                        ['SKACERStudent', 'integer', 'no-op'],\r\n",
					"                                        ['SKGender', 'integer', 'no-op'],\r\n",
					"                                        ['SKYearLevel', 'integer', 'no-op'],\r\n",
					"                                        ['SKPATTest', 'integer', 'no-op'],\r\n",
					"                                        ['SKCorrectAnswer', 'integer', 'no-op'],\r\n",
					"                                        ['StudentResponse', 'string', 'no-op'],\r\n",
					"                                        ['AnswerCorrect', 'integer', 'no-op'],\r\n",
					"                                        ['CampusPercentCorrect', 'double', 'no-op'],\r\n",
					"                                        ['DiocesePercentCorrect', 'double', 'no-op'],\r\n",
					"                                        ['CreateDate', 'string', 'no-op'],\r\n",
					"                                        ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"                                        ['Iscurrent', 'integer', 'no-op'],\r\n",
					"                                        ['SCDReason', 'string', 'no-op']                                                               \r\n",
					"                                        ]\r\n",
					"\r\n",
					"        self.schemas['DMFactPATResults'] = [\r\n",
					"                                        ['SKPATResults', 'integer', 'no-op'],\r\n",
					"                                        ['SKPATStudentTestGrouping', 'integer', 'no-op'],\r\n",
					"                                        ['SKCampus', 'integer', 'no-op'],\r\n",
					"                                        ['SKYear', 'integer', 'no-op'],\r\n",
					"                                        ['SKDate', 'integer', 'no-op'],\r\n",
					"                                        ['SKACERStudent', 'integer', 'no-op'],\r\n",
					"                                        ['SKGender', 'integer', 'no-op'],\r\n",
					"                                        ['SKYearLevel', 'integer', 'no-op'],\r\n",
					"                                        ['SKPATTest', 'integer', 'no-op'],\r\n",
					"                                        ['SKACERStanine', 'integer', 'no-op'],\r\n",
					"                                        ['SKSchoolTermWeek', 'integer', 'no-op'],\r\n",
					"                                        ['RawScore', 'integer', 'no-op'],\r\n",
					"                                        ['ScaleScore', 'double', 'no-op'],\r\n",
					"                                        ['RecentTest', 'integer', 'no-op'],\r\n",
					"                                        ['ErrorMargin', 'double', 'no-op'],\r\n",
					"                                        ['Stanine', 'integer', 'no-op'],\r\n",
					"                                        ['Percentile', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear1', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear1', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear2', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear2', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear3', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear3', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear4', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear4', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear5', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear5', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear6', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear6', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear7', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear7', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear8', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear8', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear9', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear9', 'integer', 'no-op'],\r\n",
					"                                        ['StanineYear10', 'integer', 'no-op'],\r\n",
					"                                        ['PercentileYear10', 'integer', 'no-op'],\r\n",
					"                                        ['StudentTestHeadCount', 'integer', 'no-op'],\r\n",
					"                                        ['NORMMeanScaledScore', 'double', 'no-op'],\r\n",
					"                                        ['NORMStandardDeviation', 'double', 'no-op'],\r\n",
					"                                        ['PreviousYearNORMMeanScaledScore', 'double', 'no-op'],\r\n",
					"                                        ['NextYearNORMMeanScaledScore', 'double', 'no-op'],\r\n",
					"                                        ['TestLevelNormMeanScaledScore', 'double', 'no-op'],\r\n",
					"                                        ['MatchedYearLevelTestLevel', 'string', 'no-op'],\r\n",
					"                                        ['CreateDate', 'string', 'no-op'],\r\n",
					"                                        ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"                                        ['Iscurrent', 'integer', 'no-op'],\r\n",
					"                                        ['SCDReason', 'string', 'no-op']                                                             \r\n",
					"                                        ]\r\n",
					"\r\n",
					"                                 \r\n",
					"\r\n",
					"    def ingest(self):\r\n",
					"        oea.ingest_delta_data(self.source_folder, 'DMACERStanine', self.schemas['DMACERStanine'], 'LastUpdateDate', 'SKACERStanine')\r\n",
					"        oea.ingest_delta_data(self.source_folder, 'DMACERStudent', self.schemas['DMACERStudent'], 'LastUpdateDate', 'SKACERStudent')\r\n",
					"        oea.ingest_delta_data(self.source_folder, 'DMFactPATResponse', self.schemas['DMFactPATResponse'], 'LastUpdateDate', 'SKPATResponse')\r\n",
					"        oea.ingest_delta_data(self.source_folder, 'DMFactPATResults', self.schemas['DMFactPATResults'], 'LastUpdateDate', 'SKPATResults')\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"acer_object = ACER_object()"
				],
				"execution_count": null
			}
		]
	}
}