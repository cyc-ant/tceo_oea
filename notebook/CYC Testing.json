{
	"name": "CYC Testing",
	"properties": {
		"folder": {
			"name": "Stage3"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9cb67dcd-6905-40e5-9a0f-0bf30aa35883"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/09921ef6-5d34-4a25-a233-84ffa9485571/resourceGroups/rg-oea-tceooeadev01/providers/Microsoft.Synapse/workspaces/syn-oea-tceooeadev01/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://syn-oea-tceooeadev01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"%run OEA_py"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# %%pyspark\r\n",
					"\r\n",
					"# sourcep = oea.stage2p\r\n",
					"# df1 = spark.read.load(sourcep + \"/ACER/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# df1.createOrReplaceTempView('vw_df_dmfactpatresults_pseudo')"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select count(*) from vw_df_dmfactpatresults_pseudo;"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# %%pyspark\r\n",
					"\r\n",
					"# sourcep = oea.stage2p\r\n",
					"# df2 = spark.read.load(sourcep + \"/ACER/DMPATStudentTestGrouping_pseudo\", format='delta')\r\n",
					"\r\n",
					"# df2.createOrReplaceTempView('vw_df_dmpatstudenttestgrouping')"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select count(*) from vw_df_dmpatstudenttestgrouping;"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- -- select max(combineddatetime) from (\r\n",
					"-- -- select datecomplete, timecomplete, right(left(timecomplete, 10), 8), concat(datecomplete, ' ', right(left(timecomplete, 10), 8)) as combineddatetime from vw_df_dmpatstudenttestgrouping \r\n",
					"-- -- --limit 10 \r\n",
					"-- -- order by datecomplete desc, timecomplete desc\r\n",
					"-- -- ) innerquery;\r\n",
					"\r\n",
					"-- select min(combineddatetime) from (\r\n",
					"-- select datecomplete, timecomplete, right(left(timecomplete, 10), 8), concat(datecomplete, ' ', right(left(timecomplete, 10), 8)) as combineddatetime from vw_df_dmpatstudenttestgrouping \r\n",
					"-- --limit 10 \r\n",
					"-- order by datecomplete asc, timecomplete asc\r\n",
					"-- ) innerquery;\r\n",
					"\r\n",
					"\r\n",
					"-- --select min(datecomplete), max(datecomplete) from vw_df_dmpatstudenttestgrouping ;\r\n",
					"-- --select min(timecomplete), max(timecomplete) from vw_df_dmpatstudenttestgrouping ;\r\n",
					""
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- --concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8))\r\n",
					"\r\n",
					"-- select \r\n",
					"-- a.*, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime\r\n",
					"-- from vw_df_dmfactpatresults_pseudo a\r\n",
					"-- left join vw_df_dmpatstudenttestgrouping b\r\n",
					"-- on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping\r\n",
					"\r\n",
					"-- inner join \r\n",
					"\r\n",
					"-- (\r\n",
					"-- select skyear, skacerstudent, skpattest, skcampus, scalescore, datecomplete, timecomplete, combineddatetime, max(skpatresults) as maxskpatresults\r\n",
					"-- from\r\n",
					"-- (\r\n",
					"-- select a.skpatresults, a.skyear, a.skacerstudent, a.skpattest, a.skcampus,  a.ScaleScore,  b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime\r\n",
					"-- from vw_df_dmfactpatresults_pseudo a\r\n",
					"-- left join vw_df_dmpatstudenttestgrouping b\r\n",
					"-- on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping\r\n",
					"\r\n",
					"\r\n",
					"-- inner join \r\n",
					"-- (\r\n",
					"-- select skyear, skacerstudent, skpattest, skcampus, combineddatetime, max(scalescore) as maxscalescore\r\n",
					"-- from\r\n",
					"-- (\r\n",
					"-- select a.skyear, a.skacerstudent, a.skpattest, a.skcampus,  a.ScaleScore,  b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime\r\n",
					"-- from vw_df_dmfactpatresults_pseudo a\r\n",
					"-- left join vw_df_dmpatstudenttestgrouping b\r\n",
					"-- on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping\r\n",
					"\r\n",
					"-- inner join\r\n",
					"-- (select \r\n",
					"-- \t\t\tskyear, skacerstudent, skpattest, skcampus, \r\n",
					"-- \t\t\tmax(concat(datecomplete, ' ', right(left(timecomplete, 10), 8))) as latestdate\r\n",
					"-- \t\t\tfrom\r\n",
					"-- \t\t\t\t(\r\n",
					"-- \t\t\t\tselect a.*, orig.skpatstudenttestgrouping, orig.skacerstanine, ScaleScore, skpatresults\r\n",
					"-- \t\t\t\t, b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime\r\n",
					"-- \t\t\t\t\tfrom (\r\n",
					"-- \t\t\t\t\tselect skyear, skacerstudent, skpattest, skcampus, count(*) as counttotal \r\n",
					"-- \t\t\t\t\tfrom vw_df_dmfactpatresults_pseudo\r\n",
					"-- \t\t\t\t\twhere skpattest not in (43, 54, 65, 66, 76, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112)\r\n",
					"-- \t\t\t\t\tgroup by skyear, skacerstudent, skpattest, skcampus\r\n",
					"-- \t\t\t\t\t--having count(*) = 1\r\n",
					"-- \t\t\t\t\t) a\r\n",
					"-- \t\t\t\tleft join vw_df_dmfactpatresults_pseudo orig\r\n",
					"-- \t\t\t\ton a.skyear = orig.skyear and a.skacerstudent = orig.skacerstudent and a.skpattest = orig.skpattest and a.skcampus = orig.skcampus\r\n",
					"-- \t\t\t\tleft join vw_df_dmpatstudenttestgrouping b\r\n",
					"-- \t\t\t\ton orig.skpatstudenttestgrouping = b.skpatstudenttestgrouping\r\n",
					"-- \t\t\t\t) total\r\n",
					"-- \t\t\tgroup by skyear, skacerstudent, skpattest, skcampus\r\n",
					"-- \t\t\t) inner1\r\n",
					"\r\n",
					"-- on a.skyear = inner1.skyear\r\n",
					"-- and a.skacerstudent = inner1.SKACERStudent\r\n",
					"-- and a.SKPATTest = inner1.SKPATTest\r\n",
					"-- and a.SKCampus = inner1.SKCampus\r\n",
					"-- and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner1.latestdate\r\n",
					"-- ) inner2\r\n",
					"-- group by skyear, skacerstudent, skpattest, skcampus, combineddatetime\r\n",
					"-- ) inner3\r\n",
					"-- on a.skyear = inner3.skyear\r\n",
					"-- and a.skacerstudent = inner3.SKACERStudent\r\n",
					"-- and a.SKPATTest = inner3.SKPATTest\r\n",
					"-- and a.SKCampus = inner3.SKCampus\r\n",
					"-- and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner3.combineddatetime\r\n",
					"-- ) inner4\r\n",
					"-- group by skyear, skacerstudent, skpattest, skcampus, scalescore, datecomplete, timecomplete, combineddatetime\r\n",
					"-- ) inner5\r\n",
					"-- on a.skyear = inner5.skyear\r\n",
					"-- and a.skacerstudent = inner5.SKACERStudent\r\n",
					"-- and a.SKPATTest = inner5.SKPATTest\r\n",
					"-- and a.SKCampus = inner5.SKCampus\r\n",
					"-- and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner5.combineddatetime\r\n",
					"-- and a.SKPATResults = inner5.maxskpatresults;\r\n",
					""
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"#dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"#dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"#dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# stage 3\r\n",
					"dmyearlevel_df = spark.read.load(source3p + \"/pilot/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(source3p + \"/pilot/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(source3p + \"/pilot/DMDate_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(source3p + \"/pilot/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for naplan and acer participation view\r\n",
					"factstudentenrolmentcounts_df = spark.read.load(sourcep + \"/enrolment/DMFactStudentEnrolmentCounts_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"# stage 3 naplan and acer participation view\r\n",
					"factnaplanstudentyearresult_df = spark.read.load(source3p + \"/pilot/DMFactNaplanStudentYearResult_pseudo\", format='delta')\r\n",
					"factpatresults_df = spark.read.load(source3p + \"/pilot/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Learning Task\r\n",
					"ae_manuallearningtasks_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Semester Report\r\n",
					"ae_manualsemesterreports_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for ODS tables (+ dmcampus_df already added above)\r\n",
					"odsactivity_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivity_pseudo\", format='delta')\r\n",
					"odsactivityenrolment_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivityEnrolment_pseudo\", format='delta')\r\n",
					"odscompasssubject_df = spark.read.load(sourcep + \"/_ODS/CompassODSCompassSubject_pseudo\", format='delta')\r\n",
					"odsstaffdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffDemographic_pseudo\", format='delta')\r\n",
					"odsstudentdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"odsstafforganisationdetails_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffOrganisationDetails_pseudo\", format='delta')\r\n",
					"odsstudentorganisationdetails_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentOrganisationDetails_pseudo\", format='delta')\r\n",
					"\r\n",
					"odsstudentorganisationmilestones_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentOrganisationMilestones_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')\r\n",
					"\r\n",
					"factstudentenrolmentcounts_df.createOrReplaceTempView('vw_factstudentenrolmentcounts')\r\n",
					"factnaplanstudentyearresult_df.createOrReplaceTempView('vw_factnaplanstudentyearresult')\r\n",
					"factpatresults_df.createOrReplaceTempView('vw_factpatresults_df')\r\n",
					"\r\n",
					"ae_manuallearningtasks_df.createOrReplaceTempView('vw_aemanuallearningtasks')\r\n",
					"ae_manualsemesterreports_df.createOrReplaceTempView('vw_aemanualsemesterreports')\r\n",
					"\r\n",
					"odsactivity_df.createOrReplaceTempView('vw_CompassODSActivity') \r\n",
					"odsactivityenrolment_df.createOrReplaceTempView('vw_CompassODSActivityEnrolment') \r\n",
					"odscompasssubject_df.createOrReplaceTempView('vw_CompassODSCompassSubject') \r\n",
					"odsstaffdemographic_df.createOrReplaceTempView('vw_CompassODSStaffDemographic') \r\n",
					"odsstudentdemographic_df.createOrReplaceTempView('vw_CompassODSStudentDemographic') \r\n",
					"\r\n",
					"odsstafforganisationdetails_df.createOrReplaceTempView('vw_CompassODSStaffOrganisationDetails') \r\n",
					"odsstudentorganisationdetails_df.createOrReplaceTempView('vw_CompassODSStudentOrganisationDetails') \r\n",
					"\r\n",
					"odsstudentorganisationmilestones_df.createOrReplaceTempView('vw_CompassODSStudentOrganisationMilestones') "
				],
				"execution_count": 61
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 62
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_activestudent"
				],
				"execution_count": 63
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select calendaryear, count(*) from\r\n",
					"(\r\n",
					"select\r\n",
					"distinct ms.CompassPersonId as MS_CompassPersonID\r\n",
					",demo.CompassPersonId as DEMO_CompassPersonID\r\n",
					",ms.yearlevel\r\n",
					",ms.isactive \r\n",
					",ms.iscurrentmilestone \r\n",
					",ms.studenttype \r\n",
					",ms.dioceseId\r\n",
					",ms.campusid \r\n",
					",camp.skcampus\r\n",
					",camp.BKCampusId\r\n",
					",camp.SchoolName\r\n",
					",ms.iscurrent\r\n",
					",demo.firstname\r\n",
					",demo.lastname \r\n",
					",demo.gender \r\n",
					",demo.govcode1 as ceider -- need to select where this is not null?\r\n",
					",demo.disability \r\n",
					",demo.LBOTE \r\n",
					",demo.indigenoustypecode \r\n",
					"--,s.AcademicYear\r\n",
					"--,ae.CompassPersonId\r\n",
					",ms.milestonetimestamp\r\n",
					"--,case when ms.milestonetimestamp is not null then (year(ms.milestonetimestamp)+1) else (year(CURRENT_TIMESTAMP)+1) end as yearcolumn\r\n",
					"--,year(DATEADD(HOUR, 10, cast(MilestoneTimestamp as datetime2))) as calendaryear\r\n",
					",year(MilestoneTimestamp + INTERVAL 10 HOURS) AS calendaryear\r\n",
					"from vw_CompassODSStudentOrganisationMilestones ms\r\n",
					"left join vw_CompassODSStudentDemographic demo on ms.CompassPersonId = demo.CompassPersonId --need this for details like name, disability, LBOTE, etc\r\n",
					"\tand demo.Iscurrent = 'True'\r\n",
					"left join vw_dmcampus camp on ms.campusid = camp.BKCampusId\r\n",
					"\r\n",
					"where \r\n",
					"ms.iscurrent = 'True'\r\n",
					"and ms.isactive = 'True'\r\n",
					"--and ms.iscurrentmilestone  = 'True' --this is just for 2023 (current year)\r\n",
					"--and ms.CompassPersonId = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"--and demo.GovCode1 is not null\r\n",
					"and year(MilestoneTimestamp + INTERVAL 10 HOURS) in (2021, 2022, 2023)\r\n",
					") innerquery\r\n",
					"\r\n",
					"group by calendaryear"
				],
				"execution_count": 68
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_studentstable_original\r\n",
					"as\r\n",
					"\r\n",
					"select year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote, count(*) as groupingcount from\r\n",
					"\r\n",
					"(\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yearlevel.yearlevel as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails \r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"year is not null\r\n",
					") wholequery\r\n",
					"\r\n",
					"where yearlevel is not null\r\n",
					"\r\n",
					"group by year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_studentstable_original"
				],
				"execution_count": 53
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select year, count(*) from vw_ods_studentstable_original\r\n",
					"group by year\r\n",
					"order by year"
				],
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_studentstable_2022"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_studentstable_2023\r\n",
					"as\r\n",
					"\r\n",
					"select year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote, count(*) as groupingcount from\r\n",
					"\r\n",
					"(\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yearlevel.yearlevel as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"and year(utcactivityenrolmentstartdate) = 2023 ---------------------------------------------------------------added this \r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails \r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"year is not null\r\n",
					"and year = 2023\r\n",
					") wholequery\r\n",
					"\r\n",
					"where yearlevel is not null\r\n",
					"\r\n",
					"group by year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_studentstable_2023"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_studentstable_2022"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_studentstable --39418\r\n",
					"--where year = 2023   --13245\r\n",
					"--where year = 2022   --11486\r\n",
					"--where year = 2021   --8591\r\n",
					"--where year = 2020   --2375\r\n",
					"--where year = 2019   --2435\r\n",
					"--where year = 2018   --983\r\n",
					"--where year = 2017   --303\r\n",
					"--where year = 2016   --0\r\n",
					"--where year = 2015   --0\r\n",
					"--where year = 2014   --0\r\n",
					"--where year = 2013   --0\r\n",
					"--where year = 2012   --0"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanuallearningtasks\r\n",
					"where result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 79
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanualsemesterreports --639988\r\n",
					"where bkid is null --621494\r\n",
					"-- where result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') --112780\r\n",
					"--where bkid is not null --18494\r\n",
					"--where bkid is null --621494"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanualsemesterreports\r\n",
					"where \r\n",
					"school_name = \"St Joseph's Catholic School\"\r\n",
					"    and area = 'The Strand'\r\n",
					"        and semester = 2\r\n",
					"        and year = 2022"
				],
				"execution_count": 72
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanuallearningtasks\r\n",
					"where \r\n",
					"school_name = \"St Anthony's Catholic College\"\r\n",
					"    and area = 'Deeragun'\r\n",
					"        and semester = 2\r\n",
					"        and year = 2022"
				],
				"execution_count": 65
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_aemanualsemesterreports\r\n",
					"where studentfirstname = 'Isla' \r\n",
					"    and studentlastname = 'Hildebrandt'"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_semesterreports; --112780"
				],
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_semesterreports\r\n",
					"limit 3"
				],
				"execution_count": 77
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_learningtasks\r\n",
					""
				],
				"execution_count": 78
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_semesterreports\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					", innerquery.schoolid\r\n",
					", innerquery.skcampus\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype\r\n",
					"    ,b.skcampus\r\n",
					"    ,c.schoolname, c.area, c.schoolid\r\n",
					"    ,b.skyearlevel \r\n",
					"    ,d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"         and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = trim(lower(innerquery.firstname))\r\n",
					"and lower(m.studentlastname) = trim(lower(innerquery.lastname))\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"and trim(lower(m.studentyearlevel)) = trim(lower(innerquery.yearlevelsifdesc))\r\n",
					"\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_semesterreports \r\n",
					"--where bkid is not null\r\n",
					"--where year is null;"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_learningtasks\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.School_Name\r\n",
					",m.Area\r\n",
					",m.Semester\r\n",
					",m.Year\r\n",
					",m.SubjectName\r\n",
					",m.Code\r\n",
					",m.TeacherImportIdentifier\r\n",
					",m.TaskId\r\n",
					",m.IsSubjectWide\r\n",
					",m.TaskName\r\n",
					",m.StudentCode\r\n",
					",m.GovtCode1\r\n",
					",m.StudentLastName\r\n",
					",m.StudentFirstName\r\n",
					",m.YearLevel\r\n",
					"--,case when m.YearLevel is null then m.YearLevel else concat('Year ' , cast(m.YearLevel as string)) end\r\n",
					",m.ResultType\r\n",
					",m.PrimaryGrade\r\n",
					",m.CommentTimestamp\r\n",
					",m.CommentPosterCode\r\n",
					",m.CommentPosterName\r\n",
					",m.Result\r\n",
					",m.ComponentName\r\n",
					",m.ComponentType\r\n",
					",m.IsIncludedInReport\r\n",
					",m.ReportCycleName\r\n",
					",m.DueDate\r\n",
					",m.Category\r\n",
					",m.SubmissionStatus\r\n",
					",m.ReceiptTime\r\n",
					",m.BKID\r\n",
					",innerquery.ceider\r\n",
					",innerquery.schoolid\r\n",
					",innerquery.skcampus\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, b.skyearlevel,  c.schoolname, c.area, c.schoolid, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"--and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"and trim(case when m.YearLevel is null then -1 else m.YearLevel end) = trim(innerquery.yearlevelsifcode)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')"
				],
				"execution_count": 8
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Redo query"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_studentstable_2023\r\n",
					"-- as\r\n",
					"\r\n",
					"-- select year\r\n",
					"-- , yearlevel\r\n",
					"-- , campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote, count(*) as groupingcount from\r\n",
					"\r\n",
					"-- (\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yearlevel.yearlevel as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"and year(utcactivityenrolmentstartdate) = 2023 ---------------------------------------------------------------added this \r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails \r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"year is not null\r\n",
					"and year = 2023\r\n",
					"-- ) wholequery\r\n",
					"\r\n",
					"-- where yearlevel is not null\r\n",
					"\r\n",
					"-- group by year\r\n",
					"-- , yearlevel\r\n",
					"-- , campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from\r\n",
					"(\r\n",
					"SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"\r\n",
					") innerquery\r\n",
					"--where milestoneyear = 2023 --13407\r\n",
					"--where milestoneyear = 2022 --14217\r\n",
					"--where milestoneyear = 2021 --13414\r\n",
					"--where milestoneyear = 2020 --12102\r\n",
					"--where milestoneyear = 2019 --29191"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_studentclass\r\n",
					"as\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",s.SubjectLongName\r\n",
					",a.SubjectCode\r\n",
					",a.ActivityName\r\n",
					",a.ActivityTypeDescription\r\n",
					",a.ManagingCompassPersonId\r\n",
					",staff.firstname\r\n",
					",staff.lastname\r\n",
					",ae.ActivityEnrolmentStartDate\r\n",
					",ae.ActivityEnrolmentEndDate\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS StaffName\r\n",
					",a.CampusId AS AGEID\r\n",
					",c.CampusSuburbAndName\r\n",
					"--,c.CompassSchoolURL\r\n",
					",s.AcademicYear\r\n",
					",ae.iscurrent as IsCurrent_ActivityEnrolment\r\n",
					",a.IsCurrent as IsCurrent_Activity\r\n",
					",s.IsCurrent as IsCurrent_Subject\r\n",
					",staff.iscurrent as IsCurrent_Staff\r\n",
					",d.iscurrent as IsCurrent_Student\r\n",
					"\r\n",
					"\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"\r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"\r\n",
					"JOIN vw_CompassODSActivity a \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"\r\n",
					"LEFT outer JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON a.CampusId = c.bkCampusId\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"AND a.ActivityTypeDescription = 'Standard Class'"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentclass\r\n",
					"limit 5"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_studentclass_without_grade\r\n",
					"as\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",d.disability\r\n",
					",d.indigenoustype\r\n",
					",d.indigenoustypecode\r\n",
					",d.LBOTE\r\n",
					",d.gendercode\r\n",
					",d.campusid\r\n",
					"-- ,s.SubjectLongName\r\n",
					"-- ,a.SubjectCode\r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.ManagingCompassPersonId\r\n",
					"-- ,staff.firstname\r\n",
					"-- ,staff.lastname\r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"-- ,concat(staff.FirstName,' ',staff.LastName) AS StaffName\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,c.CampusSuburbAndName\r\n",
					",c.Schoolname\r\n",
					",c.Area\r\n",
					"-- --,c.CompassSchoolURL\r\n",
					",s.AcademicYear\r\n",
					"--,yearlevel.yearlevel\r\n",
					",ae.iscurrent as IsCurrent_ActivityEnrolment\r\n",
					"-- ,a.IsCurrent as IsCurrent_Activity\r\n",
					",s.IsCurrent as IsCurrent_Subject\r\n",
					"-- ,staff.iscurrent as IsCurrent_Staff\r\n",
					",d.iscurrent as IsCurrent_Student\r\n",
					"\r\n",
					"\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"\r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"and ae.iscurrent is True \r\n",
					"\r\n",
					"-- JOIN vw_CompassODSActivity a \r\n",
					"-- ON ae.ActivityCode = a.ActivityCode\r\n",
					"-- AND ae.CampusId = a.CampusId\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"--AND a.CampusId = s.CampusId\r\n",
					"AND d.CampusId = s.CampusId\r\n",
					"and s.iscurrent is True\r\n",
					"\r\n",
					"-- LEFT outer JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"-- ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON d.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"-- left join (SELECT CompassPersonId,\r\n",
					"--            CampusId,\r\n",
					"--         --    case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"--            YearLevel,\r\n",
					"--            GroupA,\r\n",
					"--            GroupB,\r\n",
					"--            GroupC,\r\n",
					"--            GroupD,\r\n",
					"--            GroupE,\r\n",
					"--            IsActive,\r\n",
					"--            IsCurrentMilestone,\r\n",
					"--            year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"--            MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"--            COALESCE(\r\n",
					"--                        LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"--                                                                             OVER (PARTITION BY CompassPersonId,\r\n",
					"--                                                                                       OrganisationName\r\n",
					"--                                                                          ORDER BY MilestoneTimestamp,\r\n",
					"--                                                                                   HomeCampusGuid\r\n",
					"--                                                                         ),\r\n",
					"--                        make_date(9999, 12, 31)\r\n",
					"--                    ) AS MilestoneFinishDate,\r\n",
					"--            OrganisationName\r\n",
					"--     FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"--      WHERE IsCurrent is True\r\n",
					"--           AND DioceseId = 12\r\n",
					"--           and yearlevel is not null\r\n",
					"--               ) yearlevel \r\n",
					"--         on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"--         and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"--AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"-- and d.firstname = 'Georgia'\r\n",
					"-- and d.lastname = 'Carland'\r\n",
					"and s.AcademicYear is not null\r\n",
					"--and yearlevel.yearlevel is not null\r\n",
					"\r\n",
					"order by s.AcademicYear"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select academicyear, count(*) from vw_ods_studentclass_without_grade\r\n",
					"group by academicyear\r\n",
					"order by academicyear"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_studentclass_check_counts\r\n",
					"-- as\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",d.disability\r\n",
					",d.indigenoustype\r\n",
					",d.indigenoustypecode\r\n",
					",d.LBOTE\r\n",
					",d.gendercode\r\n",
					",d.campusid\r\n",
					"-- ,s.SubjectLongName\r\n",
					"-- ,a.SubjectCode\r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.ManagingCompassPersonId\r\n",
					"-- ,staff.firstname\r\n",
					"-- ,staff.lastname\r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"-- ,concat(staff.FirstName,' ',staff.LastName) AS StaffName\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,c.CampusSuburbAndName\r\n",
					",c.Schoolname\r\n",
					",c.Area\r\n",
					"-- --,c.CompassSchoolURL\r\n",
					",s.AcademicYear\r\n",
					",yearlevel.yearlevel\r\n",
					",ae.iscurrent as IsCurrent_ActivityEnrolment\r\n",
					"-- ,a.IsCurrent as IsCurrent_Activity\r\n",
					",s.IsCurrent as IsCurrent_Subject\r\n",
					"-- ,staff.iscurrent as IsCurrent_Staff\r\n",
					",d.iscurrent as IsCurrent_Student\r\n",
					"\r\n",
					"\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"\r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"and ae.iscurrent is True \r\n",
					"\r\n",
					"-- JOIN vw_CompassODSActivity a \r\n",
					"-- ON ae.ActivityCode = a.ActivityCode\r\n",
					"-- AND ae.CampusId = a.CampusId\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"--AND a.CampusId = s.CampusId\r\n",
					"AND d.CampusId = s.CampusId\r\n",
					"and s.iscurrent is True\r\n",
					"\r\n",
					"-- LEFT outer JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"-- ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON d.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"        --    case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"--AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"-- and d.firstname = 'Georgia'\r\n",
					"-- and d.lastname = 'Carland'\r\n",
					"and s.AcademicYear is not null\r\n",
					"and yearlevel.yearlevel is not null\r\n",
					"\r\n",
					"order by s.AcademicYear"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_studentclass_check_counts"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select academicyear, count(*) from vw_ods_studentclass_check_counts\r\n",
					"group by academicyear\r\n",
					"order by academicyear"
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentclass_check_counts\r\n",
					"where studentfirstname = 'Allira'\r\n",
					"    and studentlastname = 'Ackers'"
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentclass_check_counts\r\n",
					"where studentfirstname = 'Adaline'\r\n",
					"    and studentlastname = 'Airey'"
				],
				"execution_count": 41
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentclass_check_counts\r\n",
					"where studentfirstname = 'Piper'\r\n",
					"    and studentlastname = 'Dawes'"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_studentclass_check_counts_2\r\n",
					"as\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",d.disability\r\n",
					",d.indigenoustype\r\n",
					",d.indigenoustypecode\r\n",
					",d.LBOTE\r\n",
					",d.gendercode\r\n",
					",d.campusid\r\n",
					"-- ,s.SubjectLongName\r\n",
					"-- ,a.SubjectCode\r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.ManagingCompassPersonId\r\n",
					"-- ,staff.firstname\r\n",
					"-- ,staff.lastname\r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"-- ,concat(staff.FirstName,' ',staff.LastName) AS StaffName\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,c.CampusSuburbAndName\r\n",
					",c.Schoolname\r\n",
					",c.Area\r\n",
					"-- --,c.CompassSchoolURL\r\n",
					",s.AcademicYear\r\n",
					",yearlevel.yearlevel\r\n",
					",ae.iscurrent as IsCurrent_ActivityEnrolment\r\n",
					"-- ,a.IsCurrent as IsCurrent_Activity\r\n",
					",s.IsCurrent as IsCurrent_Subject\r\n",
					"-- ,staff.iscurrent as IsCurrent_Staff\r\n",
					",d.iscurrent as IsCurrent_Student\r\n",
					"\r\n",
					"\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"\r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"and ae.iscurrent is True \r\n",
					"\r\n",
					"-- JOIN vw_CompassODSActivity a \r\n",
					"-- ON ae.ActivityCode = a.ActivityCode\r\n",
					"-- AND ae.CampusId = a.CampusId\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"--AND a.CampusId = s.CampusId\r\n",
					"AND d.CampusId = s.CampusId\r\n",
					"and s.iscurrent is True\r\n",
					"\r\n",
					"-- LEFT outer JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"-- ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON d.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"        --    case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"--AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"-- and d.firstname = 'Georgia'\r\n",
					"-- and d.lastname = 'Carland'\r\n",
					"and s.AcademicYear is not null\r\n",
					"--and yearlevel.yearlevel is not null\r\n",
					"\r\n",
					"order by s.AcademicYear"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select academicyear, count(*) from vw_ods_studentclass_check_counts_2\r\n",
					"group by academicyear\r\n",
					"order by academicyear"
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"        --    case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"          and compasspersonid = 'f9ddec91-8a3a-4f31-9934-e6c305606b4f'"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus"
				],
				"execution_count": 70
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject \r\n",
					"limit 3"
				],
				"execution_count": 63
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSActivityEnrolment\r\n",
					"limit 5"
				],
				"execution_count": 52
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentDemographic\r\n",
					"limit 3"
				],
				"execution_count": 53
			}
		]
	}
}