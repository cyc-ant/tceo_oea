{
	"name": "SQL Notebook",
	"properties": {
		"folder": {
			"name": "Stage3"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a53f2a3e-862d-4be6-9984-b463f116d8af"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/09921ef6-5d34-4a25-a233-84ffa9485571/resourceGroups/rg-oea-tceooeadev01/providers/Microsoft.Synapse/workspaces/syn-oea-tceooeadev01/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://syn-oea-tceooeadev01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"%run OEA_py"
				],
				"execution_count": 346
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# example df\r\n",
					"data = [(\"James\",\"M\",60000),(\"Michael\",\"M\",70000),\r\n",
					"        (\"Robert\",None,400000),(\"Maria\",\"F\",500000),\r\n",
					"        (\"Jen\",\"\",None)]\r\n",
					"\r\n",
					"columns = [\"name\",\"gender\",\"salary\"]\r\n",
					"df = spark.createDataFrame(data = data, schema = columns)\r\n",
					"\r\n",
					"df.createOrReplaceTempView('vw_df')\r\n",
					"\r\n",
					"#df.show()"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_df"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# source locations\r\n",
					"sourcep = oea.stage2p\r\n",
					"sourcenp = oea.stage2np\r\n",
					"\r\n",
					"test_source = sourcep + '/student/DMStudent_pseudo'\r\n",
					"\r\n",
					"# create source dataframe from stage 2\r\n",
					"test_df = spark.read.load(f\"{test_source}\", format='delta')\r\n",
					"\r\n",
					"# create a sql view of the dataframe\r\n",
					"test_df.createOrReplaceTempView('test_dmstudent_df')"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Testing Transform_Functions functions"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"## Put test function here\r\n",
					"\r\n",
					"# def DMStudent_pseudo(df):\r\n",
					"\r\n",
					"#     sourcep = oea.stage2p\r\n",
					"\r\n",
					"#     df.createOrReplaceTempView('vw_df_dmstudent_pseudo')\r\n",
					"\r\n",
					"#     final_df = spark.sql(\"select * from vw_df_dmstudent_pseudo where length(bksourcestudentid) = 36\")\r\n",
					"\r\n",
					"#     return final_df\r\n",
					"\r\n",
					"def DMPersonDemographic_pseudo(df):\r\n",
					"\r\n",
					"    sourcep = oea.stage2p\r\n",
					"\r\n",
					"    df.createOrReplaceTempView('vw_df_dmpersondemographic_pseudo')\r\n",
					"\r\n",
					"    final_df = spark.sql(\"select * from vw_df_dmpersondemographic_pseudo where PersonType = 'Student' or PersonType = 'Staff'\")\r\n",
					"\r\n",
					"    return final_df"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"def DMFactPATResults_pseudo(df):\r\n",
					"\r\n",
					"    sourcep = oea.stage2p\r\n",
					"\r\n",
					"    df.createOrReplaceTempView('vw_df_dmfactpatresults_pseudo')\r\n",
					"\r\n",
					"    datedetails_df = spark.read.load(sourcep + \"/ACER/DMPATStudentTestGrouping_pseudo\", format='delta')\r\n",
					"\r\n",
					"    datedetails_df.createOrReplaceTempView('vw_df_dmpatstudenttestgrouping')\r\n",
					"\r\n",
					"    final_df = spark.sql(\"select a.*, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime from vw_df_dmfactpatresults_pseudo a left join vw_df_dmpatstudenttestgrouping b on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping inner join (select skyear, skacerstudent, skpattest, skcampus, scalescore, datecomplete, timecomplete, combineddatetime, max(skpatresults) as maxskpatresults from (select a.skpatresults, a.skyear, a.skacerstudent, a.skpattest, a.skcampus,  a.ScaleScore,  b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime from vw_df_dmfactpatresults_pseudo a left join vw_df_dmpatstudenttestgrouping b on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping inner join (select skyear, skacerstudent, skpattest, skcampus, combineddatetime, max(scalescore) as maxscalescore from (select a.skyear, a.skacerstudent, a.skpattest, a.skcampus,  a.ScaleScore,  b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime from vw_df_dmfactpatresults_pseudo a left join vw_df_dmpatstudenttestgrouping b on a.skpatstudenttestgrouping = b.skpatstudenttestgrouping inner join (select skyear, skacerstudent, skpattest, skcampus, max(concat(datecomplete, ' ', right(left(timecomplete, 10), 8))) as latestdate from (select a.*, orig.skpatstudenttestgrouping, orig.skacerstanine, ScaleScore, skpatresults, b.datecomplete, b.timecomplete, concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) as combineddatetime from (select skyear, skacerstudent, skpattest, skcampus, count(*) as counttotal from vw_df_dmfactpatresults_pseudo where skpattest not in (43, 54, 65, 66, 76, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112) group by skyear, skacerstudent, skpattest, skcampus) a left join vw_df_dmfactpatresults_pseudo orig on a.skyear = orig.skyear and a.skacerstudent = orig.skacerstudent and a.skpattest = orig.skpattest and a.skcampus = orig.skcampus left join vw_df_dmpatstudenttestgrouping b on orig.skpatstudenttestgrouping = b.skpatstudenttestgrouping) total group by skyear, skacerstudent, skpattest, skcampus) inner1 on a.skyear = inner1.skyear and a.skacerstudent = inner1.SKACERStudent and a.SKPATTest = inner1.SKPATTest and a.SKCampus = inner1.SKCampus and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner1.latestdate ) inner2 group by skyear, skacerstudent, skpattest, skcampus, combineddatetime ) inner3 on a.skyear = inner3.skyear and a.skacerstudent = inner3.SKACERStudent and a.SKPATTest = inner3.SKPATTest and a.SKCampus = inner3.SKCampus and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner3.combineddatetime ) inner4 group by skyear, skacerstudent, skpattest, skcampus, scalescore, datecomplete, timecomplete, combineddatetime ) inner5 on a.skyear = inner5.skyear and a.skacerstudent = inner5.SKACERStudent and a.SKPATTest = inner5.SKPATTest and a.SKCampus = inner5.SKCampus and concat(b.datecomplete, ' ', right(left(b.timecomplete, 10), 8)) = inner5.combineddatetime and a.SKPATResults = inner5.maxskpatresults\")\r\n",
					"\r\n",
					"    return final_df\r\n",
					""
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"%run Transform_Functions_py"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"## Test \r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df = spark.read.load(sourcep + \"/ACER/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"result_test = DMFactPATResults_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"result_test.createOrReplaceTempView('vw_df_test_checkresult4')"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_df_test_checkresult4"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"## Test \r\n",
					"\r\n",
					"# sourcep = oea.stage2p\r\n",
					"# test_df = spark.read.load(sourcep + \"/student/DMStudent_pseudo\", format='delta')\r\n",
					"\r\n",
					"# result_test = DMStudent_pseudo(test_df)\r\n",
					"# # result_test.show()\r\n",
					"\r\n",
					"# result_test.createOrReplaceTempView('vw_df_test_checkresult2')\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"result_test = DMPersonDemographic_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"result_test.createOrReplaceTempView('vw_df_test_checkresult3')"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"-- check sql results\r\n",
					"\r\n",
					"-- select count(*) from vw_df_test_checkresult2\r\n",
					"-- where length(bksourcestudentid) = 36\r\n",
					"\r\n",
					"select persontype, count(*) from vw_df_test_checkresult3 group by persontype"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need for the classenrolments table\r\n",
					"sourcep = oea.stage2p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')"
				],
				"execution_count": 271
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    LocationID AS LocationAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.YearLevelSifDesc AS YearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT cy.Year AS CalendarYear,\r\n",
					"    C.SchoolId AS AGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    student.FirstName  AS  StudentFirstName,\r\n",
					"    student.LastName AS StudentLastName,\r\n",
					"    Student.Ceider,\r\n",
					"    yl.YearLevelSifDesc AS YearLevel,\r\n",
					"    s.SubjectShortName AS Subject,\r\n",
					"    a.ActivityName AS  ClassName,\r\n",
					"    a.ActivityCode AS ClassCode,\r\n",
					"    ClassStartDate.date AS ClassStartDate,\r\n",
					"    ClassEndDate.date AS ClassEndDate,\r\n",
					"    staff.FirstName AS StaffFirstName,\r\n",
					"    staff.LastName AS StaffLastName,\r\n",
					"    c.CompassSchoolURL\r\n",
					"\r\n",
					"    FROM vw_factsubjectenrolment f\r\n",
					"    JOIN vw_dmactivity a ON f.SKActivity = a.SKActivity\r\n",
					"    AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"    JOIN vw_dmsubject s ON f.SKSubject = s.SKSubject\r\n",
					"    JOIN vw_dmpersondemographic student ON f.SKStudent = student.SKPerson\r\n",
					"    JOIN vw_dmpersondemographic staff ON f.SKStaff = staff.SKPerson\r\n",
					"    JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"    JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"    JOIN vw_dmdate ClassStartDate ON f.SKEnrolmentStartDate = ClassStartDate.SKDate\r\n",
					"\r\n",
					"    JOIN vw_dmdate ClassEndDate ON f.SKEnrolmentEndDate = ClassEndDate.SKDate\r\n",
					"    JOIN vw_dmcalendaryear cy ON f.SKYear = cy.SKYear\r\n",
					"\r\n",
					"    AND cy.Year = 2022\r\n",
					"    --WHERE ClassEndDate.date > date_format('1/10/2022', 'd/mm/yyyy') --current_date() -- spark sql uses current_date() instead of GETDATE()\r\n",
					"    --AND s.SubjectShortName <> 'Unknown'\r\n",
					"    ORDER BY\r\n",
					"    AGEID, YearLevel, StudentFirstName, StudentLastName,Ceider"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    LocationID AS LocationAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.YearLevelSifDesc AS YearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    d.date AS DateLeft\r\n",
					"FROM\r\n",
					"    vw_factpersonmilestone f\r\n",
					"JOIN vw_dmdate d ON f.SKMilestoneStartDate = d.SKDate\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'False'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"    AND Date < current_date()\r\n",
					"ORDER BY SchoolAGEID,yl.YearLevelSifDesc, pd.FirstName,pd.LastName"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"from pyspark.sql.functions import max\r\n",
					"\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"df = spark.read.load(sourcep + \"/ACER/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"#aggdf = df.groupBy(\"SKCampus\", \"SKYearLevel\", \"SKDate\", \"SKPATTest\").agg(max(\"NormMeanScaledScore\").alias(\"newNormMean\"))\r\n",
					"aggdf = df.groupBy(\"SKPATTest\").agg(max(\"NormMeanScaledScore\").alias(\"NormMeanScaledScore_cleaned\"))\r\n",
					"aggdf = aggdf.withColumnRenamed(\"SKPATTest\", \"xSKPATTest\")\r\n",
					"\r\n",
					"final_df = aggdf.join(df, df.SKPATTest == aggdf.xSKPATTest, \"inner\")\r\n",
					"final_df = final_df.drop(\"xSKPATTest\")\r\n",
					"\r\n",
					"final_df.show(truncate=False)\r\n",
					"\r\n",
					"#column=[\"newNormMean\"]\r\n",
					"#aggdf.select([count(when(isnan(c) | col(c).isNull(), c)).alias(c) for c in aggdf.columns]).show()\r\n",
					"\r\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"from pyspark.sql.functions import max\r\n",
					"from pyspark.sql.functions import col\r\n",
					"\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"df = spark.read.load(sourcep + \"/ACER/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"#aggdf = df.groupBy(\"SKCampus\", \"SKYearLevel\", \"SKDate\", \"SKPATTest\").agg(max(\"NormMeanScaledScore\").alias(\"newNormMean\"))\r\n",
					"#aggdf = df.groupBy(\"SKYear\", \"SKCampus\", \"SKPATTest\", \"MatchedYearLevelTestLevel\").count().orderBy(col(\"count\").desc())\r\n",
					"\r\n",
					"aggdf = df.groupBy(\"SKYear\", \"SKCampus\", \"SKPATTest\", \"MatchedYearLevelTestLevel\").agg(max(\"NormMeanScaledScore\").alias(\"NormMeanScaledScore_cleaned\"))\r\n",
					"\r\n",
					"aggdf.show(truncate=False)"
				],
				"execution_count": 15
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**More testing**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for naplan and acer participation view\r\n",
					"factstudentenrolmentcounts_df = spark.read.load(sourcep + \"/enrolment/DMFactStudentEnrolmentCounts_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"factnaplanstudentyearresult_df = spark.read.load(source3p + \"/pilot/DMFactNaplanStudentYearResult_pseudo\", format='delta')\r\n",
					"factpatresults_df = spark.read.load(source3p + \"/pilot/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')\r\n",
					"\r\n",
					"factstudentenrolmentcounts_df.createOrReplaceTempView('vw_factstudentenrolmentcounts')\r\n",
					"factnaplanstudentyearresult_df.createOrReplaceTempView('vw_factnaplanstudentyearresult')\r\n",
					"factpatresults_df.createOrReplaceTempView('vw_factpatresults_df')"
				],
				"execution_count": 335
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"select * from vw_dmpersondemographic limit 10;\r\n",
					"select * from vw_dmyearlevel limit 10;\r\n",
					"select * from vw_dmcampus limit 10;\r\n",
					"select * from vw_factpersonmilestone limit 10;\r\n",
					"select * from vw_aemanuallearningtasks limit 10;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df_sm = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"#result_test = DMPersonDemographic_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"test_df_sm.createOrReplaceTempView('vw_aemanuallearningtasks')"
				],
				"execution_count": 336
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanuallearningtasks"
				],
				"execution_count": 338
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanuallearningtasks\r\n",
					"where result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')"
				],
				"execution_count": 337
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_learningtasks_check_nulls\r\n",
					"--where ceider is null"
				],
				"execution_count": 346
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view  vw_ae_manual_learningtasks_check_nulls\r\n",
					""
				],
				"execution_count": 342
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_learningtasks_check_nulls\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.School_Name\r\n",
					",m.Area\r\n",
					",m.Semester\r\n",
					",m.Year\r\n",
					",m.SubjectName\r\n",
					",m.Code\r\n",
					",m.TeacherImportIdentifier\r\n",
					",m.TaskId\r\n",
					",m.IsSubjectWide\r\n",
					",m.TaskName\r\n",
					",m.StudentCode\r\n",
					",m.GovtCode1\r\n",
					",m.StudentLastName\r\n",
					",m.StudentFirstName\r\n",
					",m.YearLevel\r\n",
					"--,case when m.YearLevel is null then m.YearLevel else concat('Year ' , cast(m.YearLevel as string)) end\r\n",
					"--,case when m.YearLevel is null then -1 else m.YearLevel end as YearLevelNew\r\n",
					",m.ResultType\r\n",
					",m.PrimaryGrade\r\n",
					",m.CommentTimestamp\r\n",
					",m.CommentPosterCode\r\n",
					",m.CommentPosterName\r\n",
					",m.Result\r\n",
					",m.ComponentName\r\n",
					",m.ComponentType\r\n",
					",m.IsIncludedInReport\r\n",
					",m.ReportCycleName\r\n",
					",m.DueDate\r\n",
					",m.Category\r\n",
					",m.SubmissionStatus\r\n",
					",m.ReceiptTime\r\n",
					",m.BKID\r\n",
					",innerquery.ceider\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"--and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"and trim(case when m.YearLevel is null then -1 else m.YearLevel end) = trim(innerquery.yearlevelsifcode)\r\n",
					"\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')\r\n",
					"\r\n",
					"--and m.studentfirstname = 'Rebecca' and m.studentlastname = 'VERNON'\r\n",
					"--and innerquery.ceider is null"
				],
				"execution_count": 344
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_learningtasks_original\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.School_Name\r\n",
					",m.Area\r\n",
					",m.Semester\r\n",
					",m.Year\r\n",
					",m.SubjectName\r\n",
					",m.Code\r\n",
					",m.TeacherImportIdentifier\r\n",
					",m.TaskId\r\n",
					",m.IsSubjectWide\r\n",
					",m.TaskName\r\n",
					",m.StudentCode\r\n",
					",m.GovtCode1\r\n",
					",m.StudentLastName\r\n",
					",m.StudentFirstName\r\n",
					",m.YearLevel\r\n",
					"--,case when m.YearLevel is null then m.YearLevel else concat('Year ' , cast(m.YearLevel as string)) end\r\n",
					",m.ResultType\r\n",
					",m.PrimaryGrade\r\n",
					",m.CommentTimestamp\r\n",
					",m.CommentPosterCode\r\n",
					",m.CommentPosterName\r\n",
					",m.Result\r\n",
					",m.ComponentName\r\n",
					",m.ComponentType\r\n",
					",m.IsIncludedInReport\r\n",
					",m.ReportCycleName\r\n",
					",m.DueDate\r\n",
					",m.Category\r\n",
					",m.SubmissionStatus\r\n",
					",m.ReceiptTime\r\n",
					",m.BKID\r\n",
					",innerquery.ceider\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')"
				],
				"execution_count": 315
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					" select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'"
				],
				"execution_count": 329
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_aemanuallearningtasks\r\n",
					"where studentfirstname = 'Matilda' and studentlastname = 'WESTLEY'"
				],
				"execution_count": 328
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_learningtasks_check_nulls\r\n",
					"where studentfirstname = 'Matilda' and studentlastname = 'WESTLEY'"
				],
				"execution_count": 333
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_learningtasks_original\r\n",
					"where studentfirstname = 'Matilda' and studentlastname = 'WESTLEY'"
				],
				"execution_count": 326
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df_sm = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"#result_test = DMPersonDemographic_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"test_df_sm.createOrReplaceTempView('vw_aemanualsemesterreports')\r\n",
					"\r\n",
					""
				],
				"execution_count": 298
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_aemanualsemesterreports"
				],
				"execution_count": 299
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct yearlevel from vw_aemanuallearningtasks"
				],
				"execution_count": 230
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ae_manual_learningtasks\r\n",
					"-- as\r\n",
					"\r\n",
					"select \r\n",
					"--count(*)\r\n",
					"\r\n",
					"blanks.ceider\r\n",
					",blanks.studentfirstname\r\n",
					",blanks.studentlastname\r\n",
					",blanks.yearlevel\r\n",
					",blanks.school_name\r\n",
					"\r\n",
					" from (\r\n",
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')\r\n",
					") blanks\r\n",
					"\r\n",
					"\r\n",
					"--where yearlevel is null\r\n",
					"where blanks.ceider is null"
				],
				"execution_count": 295
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					", innerquery.firstname\r\n",
					", innerquery.lastname \r\n",
					", innerquery.schoolname \r\n",
					", innerquery.yearlevelsifcode\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')\r\n",
					"and innerquery.firstname = 'Emily'\r\n",
					"    and innerquery.lastname = 'WATERS'"
				],
				"execution_count": 292
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        --and a.firstname = 'Emily' \r\n",
					"            and a.lastname = 'WATERS'"
				],
				"execution_count": 289
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"m.* \r\n",
					"-- lower(m.studentfirstname)\r\n",
					"-- , lower(innerquery.firstname)\r\n",
					"-- , lower(m.studentlastname)\r\n",
					"-- , lower(innerquery.lastname)\r\n",
					"-- , lower(m.studentyearlevel)\r\n",
					"-- , lower(innerquery.businessdesc)\r\n",
					"-- , lower(m.school_name)\r\n",
					"-- , lower(innerquery.schoolname)\r\n",
					", innerquery.ceider\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.studentyearlevel) = trim(innerquery.yearlevelsifdesc)\r\n",
					"\r\n",
					"\r\n",
					"where m.studentfirstname = 'Austin' and m.studentlastname = 'Anoop'\r\n",
					"and m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 281
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_naplanparticipation\r\n",
					"-- as\r\n",
					"select \r\n",
					"*\r\n",
					"--, round(cast(#naplan_enrolled as float) / cast(#students_enrolled as float), 2) as participation_perc \r\n",
					", round(naplan_enrolled / students_enrolled , 2) as participation_perc \r\n",
					"from \r\n",
					"(select \r\n",
					"a.skcampus\r\n",
					", a.skyear\r\n",
					", a.skyearlevel\r\n",
					", sum(studentcount) as students_enrolled\r\n",
					", innerquery.naplan_enrolled from vw_factstudentenrolmentcounts a\r\n",
					"left join vw_dmdate b on a.skdate = b.skdate\r\n",
					"left join \r\n",
					"\t(select \r\n",
					"\t\tskcampus\r\n",
					"\t\t, skyear\r\n",
					"\t\t, skyearlevel\r\n",
					"\t\t, count(distinct skpersistentstudentid) as naplan_enrolled \r\n",
					"\t\tfrom vw_factnaplanstudentyearresult\r\n",
					"\t\t\tgroup by skcampus, skyear, skyearlevel) innerquery\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skyearlevel = innerquery.skyearlevel\r\n",
					"where a.skyearlevel in (11, 2, 12, 3) \r\n",
					"and b.MonthNumberOfYear = 5\r\n",
					"\r\n",
					"--and a.skcampus = 1489 and a.skyear = 85 and a.skyearlevel = 3 \r\n",
					"and a.skcampus = 9948 and a.skyear = 92 and a.skyearlevel = 2 \r\n",
					"--and a.skyear = 92\r\n",
					"\r\n",
					"group by a.skcampus, a.skyear, a.skyearlevel, innerquery.naplan_enrolled\r\n",
					") wholequery\r\n",
					"--order by skcampus, skyear, skyearlevel\r\n",
					""
				],
				"execution_count": 234
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.*, b.skdate, b.MonthNumberOfYear from vw_factstudentenrolmentcounts a\r\n",
					"left join vw_dmdate b on a.skdate = b.skdate\r\n",
					"--where a.skcampus = 1489 and a.skyear = 85 and a.skyearlevel = 3 \r\n",
					"where a.skcampus = 9948 and a.skyear = 92 and a.skyearlevel = 2 \r\n",
					"and b.MonthNumberOfYear = 5"
				],
				"execution_count": 235
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"\t\tskcampus\r\n",
					"\t\t, skyear\r\n",
					"\t\t, skyearlevel\r\n",
					"        , sknaplanassessmentid\r\n",
					"\t\t, count(distinct skpersistentstudentid) as naplan_enrolled \r\n",
					"\t\tfrom vw_factnaplanstudentyearresult\r\n",
					"\r\n",
					"        where \r\n",
					"        --skcampus = 1489 and skyear = 85 and skyearlevel = 3\r\n",
					"        skcampus = 9948 and skyear = 92 and skyearlevel = 2  \r\n",
					"        and skpersistentstudentid <> -1\r\n",
					"\r\n",
					"\t\t\tgroup by skcampus, skyear, skyearlevel, sknaplanassessmentid"
				],
				"execution_count": 240
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"count(*)\r\n",
					"\t\tfrom vw_factnaplanstudentyearresult\r\n",
					"\r\n",
					"        --where skcampus = 1489 and skyear = 85 and skyearlevel = 3 \r\n",
					"        where skcampus = 9948 and skyear = 92 and skyearlevel = 2 \r\n",
					"        and skpersistentstudentid <> -1\r\n",
					""
				],
				"execution_count": 242
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_semesterreports_checks\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"--count(*)\r\n",
					"\r\n",
					"blanks.ceider\r\n",
					",blanks.studentfirstname\r\n",
					",blanks.studentlastname\r\n",
					",blanks.studentyearlevel\r\n",
					",blanks.school_name\r\n",
					"\r\n",
					"\r\n",
					" from (\r\n",
					"\r\n",
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					"\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.studentyearlevel) = trim(innerquery.yearlevelsifdesc)\r\n",
					"\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') \r\n",
					" ) blanks\r\n",
					"\r\n",
					"--where blanks.studentyearlevel is null\r\n",
					"where blanks.ceider is null --3136"
				],
				"execution_count": 279
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select check.schoolname, count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"a.ceider\r\n",
					",a.studentfirstname\r\n",
					",innerquery.firstname\r\n",
					",a.studentlastname\r\n",
					",innerquery.lastname\r\n",
					",a.studentyearlevel\r\n",
					",innerquery.yearlevelsifdesc\r\n",
					",a.school_name\r\n",
					",innerquery.schoolname\r\n",
					"\r\n",
					" from vw_ae_manual_semesterreports_checks a \r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(a.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(a.studentlastname) = lower(innerquery.lastname)\r\n",
					"--and lower(a.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(a.studentyearlevel) = trim(innerquery.yearlevelsifdesc)\r\n",
					"\r\n",
					") check\r\n",
					"group by check.schoolname"
				],
				"execution_count": 278
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus"
				],
				"execution_count": 300
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_semesterreports"
				],
				"execution_count": 297
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and a.firstname = 'Charlotte' and a.lastname = 'Dubois' --St Joseph's Catholic School, The Strand\r\n",
					"        "
				],
				"execution_count": 280
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"#dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"#dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"#dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# stage 3\r\n",
					"dmyearlevel_df = spark.read.load(source3p + \"/pilot/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(source3p + \"/pilot/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(source3p + \"/pilot/DMDate_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(source3p + \"/pilot/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for naplan and acer participation view\r\n",
					"factstudentenrolmentcounts_df = spark.read.load(sourcep + \"/enrolment/DMFactStudentEnrolmentCounts_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"# stage 3 naplan and acer participation view\r\n",
					"factnaplanstudentyearresult_df = spark.read.load(source3p + \"/pilot/DMFactNaplanStudentYearResult_pseudo\", format='delta')\r\n",
					"factpatresults_df = spark.read.load(source3p + \"/pilot/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Learning Task\r\n",
					"ae_manuallearningtasks_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Semester Report\r\n",
					"ae_manualsemesterreports_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')\r\n",
					"\r\n",
					"factstudentenrolmentcounts_df.createOrReplaceTempView('vw_factstudentenrolmentcounts')\r\n",
					"factnaplanstudentyearresult_df.createOrReplaceTempView('vw_factnaplanstudentyearresult')\r\n",
					"factpatresults_df.createOrReplaceTempView('vw_factpatresults_df')\r\n",
					"\r\n",
					"ae_manuallearningtasks_df.createOrReplaceTempView('vw_aemanuallearningtasks')\r\n",
					"ae_manualsemesterreports_df.createOrReplaceTempView('vw_aemanualsemesterreports')"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df_sm = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"#result_test = DMPersonDemographic_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"test_df_sm.createOrReplaceTempView('vw_aemanuallearningtasks')"
				],
				"execution_count": 445
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ae_manual_learningtasks_2"
				],
				"execution_count": 431
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_learningtasks_2\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.School_Name\r\n",
					",m.Area\r\n",
					",m.Semester\r\n",
					",m.Year\r\n",
					",m.SubjectName\r\n",
					",m.Code\r\n",
					",m.TeacherImportIdentifier\r\n",
					",m.TaskId\r\n",
					",m.IsSubjectWide\r\n",
					",m.TaskName\r\n",
					",m.StudentCode\r\n",
					",m.GovtCode1\r\n",
					",m.StudentLastName\r\n",
					",m.StudentFirstName\r\n",
					",m.YearLevel\r\n",
					"--,case when m.YearLevel is null then m.YearLevel else concat('Year ' , cast(m.YearLevel as string)) end\r\n",
					",m.ResultType\r\n",
					",m.PrimaryGrade\r\n",
					",m.CommentTimestamp\r\n",
					",m.CommentPosterCode\r\n",
					",m.CommentPosterName\r\n",
					",m.Result\r\n",
					",m.ComponentName\r\n",
					",m.ComponentType\r\n",
					",m.IsIncludedInReport\r\n",
					",m.ReportCycleName\r\n",
					",m.DueDate\r\n",
					",m.Category\r\n",
					",m.SubmissionStatus\r\n",
					",m.ReceiptTime\r\n",
					",m.BKID\r\n",
					",innerquery.ceider\r\n",
					",innerquery.schoolid\r\n",
					",innerquery.skcampus\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, b.skyearlevel,  c.schoolname, c.area, c.schoolid, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"--and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"and trim(case when m.YearLevel is null then -1 else m.YearLevel end) = trim(innerquery.yearlevelsifcode)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')"
				],
				"execution_count": 456
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_learningtasks\r\n",
					"where ceider is null"
				],
				"execution_count": 356
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_learningtasks_2\r\n",
					"--where ceider is null"
				],
				"execution_count": 434
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_learningtasks_2 limit 10"
				],
				"execution_count": 457
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"sourcep = oea.stage2p\r\n",
					"test_df_sm = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"#result_test = DMPersonDemographic_pseudo(test_df)\r\n",
					"# result_test.show()\r\n",
					"\r\n",
					"test_df_sm.createOrReplaceTempView('vw_aemanualsemesterreports')\r\n",
					"\r\n",
					""
				],
				"execution_count": 469
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanualsemesterreports"
				],
				"execution_count": 391
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_aemanualsemesterreports\r\n",
					"where result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 428
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ae_manual_semesterreports_test"
				],
				"execution_count": 472
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_semesterreports_test\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					", innerquery.schoolid\r\n",
					", innerquery.skcampus\r\n",
					"-- innerquery.ceider\r\n",
					"-- ,m.studentfirstname\r\n",
					"-- ,innerquery.firstname\r\n",
					"-- ,m.studentlastname \r\n",
					"-- ,innerquery.lastname\r\n",
					"-- ,innerquery.skcampus\r\n",
					"-- ,m.school_name \r\n",
					"-- ,innerquery.schoolname\r\n",
					"-- ,m.area \r\n",
					"-- ,innerquery.area\r\n",
					"-- ,m.studentyearlevel \r\n",
					"-- ,innerquery.yearlevelsifdesc\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype\r\n",
					"    ,b.skcampus\r\n",
					"    ,c.schoolname, c.area, c.schoolid\r\n",
					"    ,b.skyearlevel \r\n",
					"    ,d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"         and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = trim(lower(innerquery.firstname))\r\n",
					"and lower(m.studentlastname) = trim(lower(innerquery.lastname))\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"and trim(lower(m.studentyearlevel)) = trim(lower(innerquery.yearlevelsifdesc))\r\n",
					"\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') \r\n",
					"\r\n",
					"--and m.studentfirstname = 'Oliver' and m.studentlastname = 'Henderson'"
				],
				"execution_count": 473
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_semesterreports_test \r\n",
					"where ceider is null"
				],
				"execution_count": 492
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"  select \r\n",
					"  a.studentfirstname, innerquery.firstname\r\n",
					"  , a.studentlastname, innerquery.lastname\r\n",
					"  , a.school_name, innerquery.schoolname\r\n",
					"  , a.area , innerquery.area\r\n",
					"  , a.studentyearlevel, innerquery.YearLevelSifDesc, innerquery.BusinessDesc\r\n",
					"  , innerquery.ceider\r\n",
					"  \r\n",
					"  from vw_aemanualsemesterreports a\r\n",
					"\r\n",
					"\r\n",
					"  left join (\r\n",
					"  select a.ceider, a.firstname, a.lastname, b.skcampus, b.skyearlevel, c.YearLevelSifDesc, c.BusinessDesc, d.schoolname , d.area from vw_dmpersondemographic a\r\n",
					"  left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"  left join vw_dmyearlevel c on b.skyearlevel = c.skyearlevel\r\n",
					"  left join vw_dmcampus d on b.skcampus = d.skcampus\r\n",
					"  where a.firstname = 'Oliver' and a.lastname = 'Henderson' \r\n",
					"      and a.persontype = 'Student') innerquery\r\n",
					"\r\n",
					"  on a.studentfirstname = innerquery.firstname\r\n",
					"  and a.studentlastname = innerquery.lastname\r\n",
					"  and a.school_name = innerquery.schoolname \r\n",
					"  and a.area = innerquery.area\r\n",
					"  and a.studentyearlevel = innerquery.YearLevelSifDesc\r\n",
					"  \r\n",
					"    where studentfirstname = 'Oliver' and studentlastname = 'Henderson'"
				],
				"execution_count": 476
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.persontype from vw_dmpersondemographic a\r\n",
					"  left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"where a.firstname = 'Georgia' and a.lastname = 'Tate' "
				],
				"execution_count": 481
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_semesterreports_test\r\n",
					"where ceider is null"
				],
				"execution_count": 438
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.ceider, a.firstname, a.lastname, a.persontype\r\n",
					"    ,b.skcampus\r\n",
					"    ,c.schoolname, c.area \r\n",
					"    ,b.skyearlevel \r\n",
					"    ,d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"         and b.iscurrentmilestone = 'True'\r\n",
					"             and a.firstname = 'Georgia' and a.lastname = 'Field'"
				],
				"execution_count": 426
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_factpersonmilestone\r\n",
					"where ceider = 453347529"
				],
				"execution_count": 427
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmyearlevel"
				],
				"execution_count": 412
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_semesterreports"
				],
				"execution_count": 397
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ae_manual_semesterreports\r\n",
					"where ceider is null"
				],
				"execution_count": 421
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select studentfirstname, studentlastname, studentyearlevel, school_name, area from vw_ae_manual_semesterreports\r\n",
					"where ceider is null"
				],
				"execution_count": 420
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"select * from vw_ae_manual_semesterreports\r\n",
					"where ceider is null"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_aemanualsemesterreports\r\n",
					"where studentfirstname = 'Troy' and studentlastname = 'Holland'\r\n",
					"    and result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 373
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, c.area, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and firstname = 'Oliver' and lastname = 'Henderson'"
				],
				"execution_count": 400
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select a.*, b.skyearlevel from vw_dmpersondemographic a\r\n",
					"left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"where trim(a.firstname) = 'Troy' and a.lastname = 'Holland'"
				],
				"execution_count": 423
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"select \r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, c.schoolname, b.skyearlevel, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and trim(m.studentyearlevel) = trim(innerquery.yearlevelsifdesc)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_naplanparticipation\r\n",
					"as\r\n",
					"select \r\n",
					"*\r\n",
					"--, round(cast(#naplan_enrolled as float) / cast(#students_enrolled as float), 2) as participation_perc \r\n",
					", round(naplan_enrolled / students_enrolled , 2) as participation_perc \r\n",
					"from \r\n",
					"(select \r\n",
					"a.skcampus\r\n",
					", a.skyear\r\n",
					", a.skyearlevel\r\n",
					", sum(studentcount) as students_enrolled\r\n",
					", innerquery.naplan_enrolled from vw_factstudentenrolmentcounts a\r\n",
					"left join vw_dmdate b on a.skdate = b.skdate\r\n",
					"left join \r\n",
					"\t(select \r\n",
					"\t\tskcampus\r\n",
					"\t\t, skyear\r\n",
					"\t\t, skyearlevel\r\n",
					"\t\t, count(distinct skpersistentstudentid) as naplan_enrolled \r\n",
					"\t\tfrom vw_factnaplanstudentyearresult\r\n",
					"\t\t\tgroup by skcampus, skyear, skyearlevel) innerquery\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skyearlevel = innerquery.skyearlevel\r\n",
					"where a.skyearlevel in (11, 2, 12, 3) \r\n",
					"and b.MonthNumberOfYear = 5\r\n",
					"group by a.skcampus, a.skyear, a.skyearlevel, innerquery.naplan_enrolled\r\n",
					") wholequery\r\n",
					"--order by skcampus, skyear, skyearlevel\r\n",
					""
				],
				"execution_count": 493
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_naplanparticipation\r\n",
					"where skyear = 92\r\n",
					"and skcampus = 9948 \r\n",
					"--and skyearlevel = 2"
				],
				"execution_count": 518
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(#naplan_enrolled as float) / cast(#students_enrolled as float), 2) as participation_perc \r\n",
					", round(naplan_enrolled / students_enrolled , 2) as participation_perc \r\n",
					"from \r\n",
					"(select \r\n",
					"a.skcampus\r\n",
					", a.skyear\r\n",
					", a.skyearlevel\r\n",
					", sum(studentcount) as students_enrolled\r\n",
					", innerquery.naplan_enrolled from vw_factstudentenrolmentcounts a\r\n",
					"left join vw_dmdate b on a.skdate = b.skdate\r\n",
					"left join \r\n",
					"\t(select \r\n",
					"\t\tskcampus\r\n",
					"\t\t, skyear\r\n",
					"\t\t, skyearlevel\r\n",
					"\t\t, count(distinct skpersistentstudentid) as naplan_enrolled \r\n",
					"\t\tfrom vw_factnaplanstudentyearresult\r\n",
					"\t\t\tgroup by skcampus, skyear, skyearlevel) innerquery\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skyearlevel = innerquery.skyearlevel\r\n",
					"--on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skdate = innerquery.skdate and a.skyearlevel = innerquery.skyearlevel \r\n",
					"where a.skyearlevel in (11, 2, 12, 3) \r\n",
					"and b.MonthNumberOfYear = 5\r\n",
					"group by a.skcampus, a.skyear, a.skyearlevel, innerquery.naplan_enrolled\r\n",
					") wholequery\r\n",
					"where skcampus = 8769 and skyear = 91 and skyearlevel = 2"
				],
				"execution_count": 510
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\tskcampus\r\n",
					"\t\t\t\t\t\t, skyear\r\n",
					"\t\t\t\t\t\t, SKDate\r\n",
					"\t\t\t\t\t\t, skyearlevel\r\n",
					"\t\t\t\t\t\t, SKACERStudent\r\n",
					"\t\t\t\t\t\t, count(distinct skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df\r\n",
					"\t\t\t\t\t\t\tgroup by skcampus, skyear, skdate, skyearlevel, SKACERStudent --9\r\n",
					"\t\t\t) innerinner\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skdate = innerquery.skdate and a.skyearlevel = innerquery.skyearlevel \r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus, a.skyear, a.skdate, a.skyearlevel, innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"where skcampus = 8769 and skyear = 91 and skyearlevel = 2"
				],
				"execution_count": 18
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Current ACER code"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_acerparticipation\r\n",
					"-- as\r\n",
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\tskcampus\r\n",
					"\t\t\t\t\t\t, skyear\r\n",
					"\t\t\t\t\t\t, SKDate\r\n",
					"\t\t\t\t\t\t, skyearlevel\r\n",
					"\t\t\t\t\t\t, SKACERStudent\r\n",
					"\t\t\t\t\t\t, count(distinct skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df\r\n",
					"\t\t\t\t\t\t\tgroup by skcampus, skyear, skdate, skyearlevel, SKACERStudent --9\r\n",
					"\t\t\t) innerinner\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skdate = innerquery.skdate and a.skyearlevel = innerquery.skyearlevel \r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus, a.skyear, a.skdate, a.skyearlevel, innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\tskcampus\r\n",
					"\t\t\t\t\t\t, skyear\r\n",
					"\t\t\t\t\t\t, SKDate\r\n",
					"\t\t\t\t\t\t, skyearlevel\r\n",
					"\t\t\t\t\t\t, SKACERStudent\r\n",
					"\t\t\t\t\t\t, count(distinct skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df\r\n",
					"\t\t\t\t\t\t\tgroup by skcampus, skyear, skdate, skyearlevel, SKACERStudent --9\r\n",
					"\t\t\t) innerinner\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skdate = innerquery.skdate and a.skyearlevel = innerquery.skyearlevel \r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus, a.skyear, a.skdate, a.skyearlevel, innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear, a.skdate, a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear\r\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmdate\r\n",
					"where skdate in (36073, 36134, 36058); \r\n",
					"--year, monthnumberofyear, daynumberofmonth"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Code below gives the breakdown, can filter out the nulls\r\n",
					"But of the 3 dates, which one to use? Bringing in all the dates will give duplicate information?"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t--, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join vw_dmdate datedetails\r\n",
					"on a.skdate = datedetails.skdate\r\n",
					"\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear, a.skdate, a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus \r\n",
					"and a.skyear = innerquery.skyear \r\n",
					"--and a.skdate = innerquery.skdate \r\n",
					"and a.skyearlevel = innerquery.skyearlevel \r\n",
					"and datedetails.monthnumberofyear = innerquery.monthnumberofyear\r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus\r\n",
					", a.skyear\r\n",
					"--, a.skdate\r\n",
					", a.skyearlevel\r\n",
					", innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear, a.skdate, a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_factpatresults_df limit 3\r\n",
					"--how to tell which result to use?"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"domainselection_df = spark.read.load(sourcep + \"/_GeneralData/DomainSelection_pseudo\", format='delta')\r\n",
					"flagimagedata_df = spark.read.load(sourcep + \"/_GeneralData/FlagImageData_pseudo\", format='delta')\r\n",
					"genderimagedata_df = spark.read.load(sourcep + \"/_GeneralData/GenderImageData_pseudo\", format='delta')\r\n",
					"icsea_df = spark.read.load(sourcep + \"/_GeneralData/ICSEA_pseudo\", format='delta')\r\n",
					"schoollist_df = spark.read.load(sourcep + \"/_GeneralData/School List_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"domainselection_df.createOrReplaceTempView('vw_domainselection')\r\n",
					"flagimagedata_df.createOrReplaceTempView('vw_flagimagedata')\r\n",
					"genderimagedata_df.createOrReplaceTempView('vw_genderimagedata')\r\n",
					"icsea_df.createOrReplaceTempView('vw_icsea')\r\n",
					"schoollist_df.createOrReplaceTempView('vw_schoollist')\r\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_flagimagedata"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"\r\n",
					"odsactivity_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivity_pseudo\", format='delta')\r\n",
					"odsactivityenrolment_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivityEnrolment_pseudo\", format='delta')\r\n",
					"odscompasssubject_df = spark.read.load(sourcep + \"/_ODS/CompassODSCompassSubject_pseudo\", format='delta')\r\n",
					"odsstaffdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffDemographic_pseudo\", format='delta')\r\n",
					"odsstudentdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"\r\n",
					"odsactivity_df.createOrReplaceTempView('vw_CompassODSActivity') #1426143\r\n",
					"odsactivityenrolment_df.createOrReplaceTempView('vw_CompassODSActivityEnrolment') #2040598\r\n",
					"odscompasssubject_df.createOrReplaceTempView('vw_CompassODSCompassSubject') #47729\r\n",
					"odsstaffdemographic_df.createOrReplaceTempView('vw_CompassODSStaffDemographic') #18664\r\n",
					"odsstudentdemographic_df.createOrReplaceTempView('vw_CompassODSStudentDemographic') #121511\r\n",
					"\r\n",
					""
				],
				"execution_count": 165
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSActivity limit 5"
				],
				"execution_count": 166
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- check how many records for current records\r\n",
					"-- bring in IsCurrent flag for each table (and then filter in powerbi)\r\n",
					"-- add academic year\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",s.SubjectLongName\r\n",
					",a.SubjectCode\r\n",
					",a.ActivityName\r\n",
					",a.ActivityTypeDescription\r\n",
					",ae.ActivityEnrolmentStartDate\r\n",
					",ae.ActivityEnrolmentEndDate\r\n",
					",staff.FirstName +' '+ staff.LastName AS StaffName\r\n",
					",a.CampusId AS AGEID\r\n",
					",c.CampusSuburbAndName\r\n",
					",c.CompassSchoolURL\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND ae.iscurrent is True\r\n",
					"JOIN vw_CompassODSActivity a \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND a.IsCurrent is True\r\n",
					"\r\n",
					"-- --its possible for an activity to not be linked to a subject hence the left outer join.\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"--AND s.AcademicYear = 2021 \r\n",
					"\r\n",
					"-- --join to get the teacher of the class\r\n",
					"LEFT OUTER JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND staff.iscurrent is True\r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON a.CampusId = c.bkCampusId\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"-- AND ae.ActivityEnrolmentStartDate >= '2021-01-01'\r\n",
					"-- AND ae.ActivityEnrolmentStartDate < '2023-01-01'\r\n",
					"AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"-- --ORDER BY a.CampusId, d.CompassPersonId, ae.ActivityEnrolmentStartDate, a.ActivityName\r\n",
					""
				],
				"execution_count": 40
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject limit 10"
				],
				"execution_count": 61
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from vw_CompassODSStaffDemographic where iscurrent is True limit 10"
				],
				"execution_count": 73
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from vw_CompassODSStudentDemographic limit 3"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select \r\n",
					"staff.firstname\r\n",
					", staff.lastname \r\n",
					", staff.CompassPersonId as StaffID\r\n",
					", staff.CampusId\r\n",
					", c.schoolname\r\n",
					"--,a.SubjectCode\r\n",
					"--,a.ActivityName\r\n",
					"--,a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					",d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId as StudentID\r\n",
					",d.CampusId\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where staff.firstname = 'Louise' and staff.lastname = 'Costabeber' and staff.iscurrent is True\r\n",
					""
				],
				"execution_count": 66
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus where bkcampusid = 17227"
				],
				"execution_count": 65
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from \r\n",
					"(\r\n",
					"select \r\n",
					"staff.firstname\r\n",
					", staff.lastname \r\n",
					", staff.CompassPersonId as StaffID\r\n",
					", staff.CampusId\r\n",
					", c.schoolname\r\n",
					", s.AcademicYear\r\n",
					", s.subjectyearlevel\r\n",
					"--,a.SubjectCode\r\n",
					",a.ActivityName\r\n",
					",a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					",d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					"-- ,d.CompassPersonId as StudentID\r\n",
					"-- ,d.CampusId\r\n",
					"-- ,d.CompassPersonId\r\n",
					"-- ,d.GovCode1 AS Ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"-- AND s.AcademicYear = 2023 \r\n",
					"\r\n",
					"--where staff.firstname = 'Louise' and staff.lastname = 'Costabeber' and staff.iscurrent is True\r\n",
					"--where staff.firstname = 'Mark' and staff.lastname = 'Carlon' and staff.iscurrent is True\r\n",
					"where staff.firstname = 'Chloe' and staff.lastname = 'McLaren' and staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"-- where innerquery.academicyear = 2023"
				],
				"execution_count": 109
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year --2023\r\n",
					",s.subjectyearlevel as YearLevel\r\n",
					",staff.campusid \r\n",
					",c.schoolname\r\n",
					"\r\n",
					",staff.bkstaff \r\n",
					",staff.compasspersonid as StaffCompassPersonId\r\n",
					",staff.firstname as TeacherFirstName\r\n",
					",staff.lastname as TeacherLastName\r\n",
					"\r\n",
					",d.bkstudent\r\n",
					",d.compasspersonid as StudentCompassPersonId\r\n",
					",d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					"\r\n",
					",a.SubjectCode\r\n",
					",a.ActivityName\r\n",
					",a.ActivityCode\r\n",
					",a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					",ae.ActivityEnrolmentStartDate\r\n",
					",ae.ActivityEnrolmentEndDate\r\n",
					"\r\n",
					",s.subjectshortname \r\n",
					",s.subjectyearlevel \r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"\r\n",
					"where staff.firstname = 'Chloe' and staff.lastname = 'McLaren' and staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where innerquery.Year = 2021\r\n",
					"and studentlastname = 'Choveaux'\r\n",
					"\r\n",
					"--total count = 15739\r\n",
					"--academicyear = 2023 = 966"
				],
				"execution_count": 168
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSActivityEnrolment \r\n",
					"where campusid = 5354 and iscurrent is True and activitycode = 'SCI_2-6_YR3'\r\n",
					""
				],
				"execution_count": 197
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select \r\n",
					"-- --distinct subjectyearlevel \r\n",
					"-- *\r\n",
					"-- from vw_CompassODSCompassSubject \r\n",
					"-- where academicyear = 2023\r\n",
					"-- limit 10\r\n",
					"\r\n",
					"select subjectyearlevel, count(*) from vw_CompassODSCompassSubject\r\n",
					"where academicyear = 2023\r\n",
					"group by subjectyearlevel "
				],
				"execution_count": 193
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--ae.activitycode, ae.activityname, ae.subjectcode, s.academicyear, subjectshortname, subjectyearlevel \r\n",
					"distinct activitycode, activityname, subjectcode\r\n",
					"from vw_CompassODSActivityEnrolment ae\r\n",
					"\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"\r\n",
					"--where subjectyearlevel = 2  -----------------------------------------shows subjectyearlevel is inconsistent as there are activityname = 'MATH_2-6_Yr 5/6B'\r\n",
					"--where subjectyearlevel = 1 -----------------------------------------shows subjectyearlevel is inconsistent as there are activityname = 'ART_2-6_3A', 'EPROJ_P-1_Yr 1C', 'TECH_P-1_PREPB'\r\n",
					"--where subjectyearlevel = 7 -----------------------------------------shows subjectyearlevel is inconsistent as there are activityname = '07HPE2', 'EXTTCTC1'\r\n",
					"--where subjectyearlevel = 11 -----------------------------------------shows subjectyearlevel is inconsistent as there are activityname = '11RAE2', 'EXTTCTC1'\r\n",
					"-- and activityname like '%YR%'\r\n",
					"where subjectyearlevel = 'CY'"
				],
				"execution_count": 206
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject \r\n",
					"where subjectyearlevel = 'CY'\r\n",
					"\r\n",
					"--academicyear, subjectshortname, subjectyearlevel"
				],
				"execution_count": 181
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select *\r\n",
					"--ActivityName, ActivityCode \r\n",
					"from vw_CompassODSActivity\r\n",
					""
				],
				"execution_count": 182
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--distinct subjectyearlevel \r\n",
					"*\r\n",
					"from vw_CompassODSCompassSubject \r\n",
					"-- where academicyear = 2023\r\n",
					"-- limit 5"
				],
				"execution_count": 159
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_CompassODSActivity; --1426143"
				],
				"execution_count": 113
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct academicyear from vw_CompassODSCompassSubject\r\n",
					"order by academicyear desc"
				],
				"execution_count": 98
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- check how many records for current records\r\n",
					"-- bring in IsCurrent flag for each table (and then filter in powerbi)\r\n",
					"-- add academic year\r\n",
					"\r\n",
					"SELECT distinct\r\n",
					"d.FirstName AS StudentFirstName \r\n",
					",d.LastName AS StudentLastName\r\n",
					",d.CompassPersonId\r\n",
					",d.GovCode1 AS Ceider\r\n",
					",s.SubjectLongName\r\n",
					",a.SubjectCode\r\n",
					",a.ActivityName\r\n",
					",a.ActivityTypeDescription\r\n",
					",a.ManagingCompassPersonId\r\n",
					",staff.firstname\r\n",
					",staff.lastname\r\n",
					",ae.ActivityEnrolmentStartDate\r\n",
					",ae.ActivityEnrolmentEndDate\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS StaffName\r\n",
					",a.CampusId AS AGEID\r\n",
					",c.CampusSuburbAndName\r\n",
					",c.CompassSchoolURL\r\n",
					",s.AcademicYear\r\n",
					",ae.iscurrent as IsCurrent_ActivityEnrolment\r\n",
					",a.IsCurrent as IsCurrent_Activity\r\n",
					",s.IsCurrent as IsCurrent_Subject\r\n",
					",staff.iscurrent as IsCurrent_Staff\r\n",
					",d.iscurrent as IsCurrent_Student\r\n",
					"\r\n",
					"\r\n",
					"FROM \r\n",
					"vw_CompassODSStudentDemographic d \r\n",
					"\r\n",
					"JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"--AND ae.iscurrent is True\r\n",
					"\r\n",
					"JOIN vw_CompassODSActivity a \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"--AND a.IsCurrent is True\r\n",
					"\r\n",
					"-- --its possible for an activity to not be linked to a subject hence the left outer join.\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"--AND s.IsCurrent is True\r\n",
					"-- AND s.AcademicYear = 2021 -- Remove, but add in flag for filter\r\n",
					"\r\n",
					"-- --join to get the teacher of the class\r\n",
					"LEFT outer JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"-- AND staff.iscurrent is True\r\n",
					"\r\n",
					"JOIN vw_dmcampus c ON a.CampusId = c.bkCampusId\r\n",
					"WHERE \r\n",
					"d.iscurrent is True\r\n",
					"-- AND ae.ActivityEnrolmentStartDate >= '2021-01-01'\r\n",
					"-- AND ae.ActivityEnrolmentStartDate < '2023-01-01'\r\n",
					"AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"    -- and d.FirstName = 'Charlie'\r\n",
					"    --     and d.lastname = 'Crawford'\r\n",
					"\r\n",
					"-- order by ae.ActivityEnrolmentStartDate desc"
				],
				"execution_count": 89
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Below is outdated but the logic and what fields is required is correct"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"-- -- check how many records for current records\r\n",
					"-- -- bring in IsCurrent flag for each table (and then filter in powerbi)\r\n",
					"-- -- add academic year\r\n",
					"\r\n",
					"-- SELECT distinct\r\n",
					"-- d.FirstName AS StudentFirstName \r\n",
					"-- ,d.LastName AS StudentLastName\r\n",
					"-- ,d.CompassPersonId\r\n",
					"-- ,d.GovCode1 AS Ceider\r\n",
					"-- ,s.SubjectLongName\r\n",
					"-- ,a.SubjectCode\r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"-- ,staff.FirstName +' '+ staff.LastName AS StaffName\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,c.CampusSuburbAndName\r\n",
					"-- ,c.CompassSchoolURL\r\n",
					"-- FROM \r\n",
					"-- vw_CompassODSStudentDemographic d \r\n",
					"-- JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"-- ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"-- AND ae.iscurrent is True\r\n",
					"-- JOIN vw_CompassODSActivity a \r\n",
					"-- ON ae.ActivityCode = a.ActivityCode\r\n",
					"-- AND ae.CampusId = a.CampusId\r\n",
					"-- AND a.IsCurrent is True\r\n",
					"\r\n",
					"-- -- --its possible for an activity to not be linked to a subject hence the left outer join.\r\n",
					"-- LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"-- ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"-- --AND s.AcademicYear = 2021 \r\n",
					"\r\n",
					"-- -- --join to get the teacher of the class\r\n",
					"-- LEFT OUTER JOIN vw_CompassODSStaffDemographic  staff \r\n",
					"-- ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"-- AND staff.iscurrent is True\r\n",
					"\r\n",
					"-- JOIN vw_dmcampus c ON a.CampusId = c.bkCampusId\r\n",
					"-- WHERE \r\n",
					"-- d.iscurrent is True\r\n",
					"-- -- AND ae.ActivityEnrolmentStartDate >= '2021-01-01'\r\n",
					"-- -- AND ae.ActivityEnrolmentStartDate < '2023-01-01'\r\n",
					"-- AND a.ActivityTypeDescription = 'Standard Class'\r\n",
					"-- -- --ORDER BY a.CampusId, d.CompassPersonId, ae.ActivityEnrolmentStartDate, a.ActivityName\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Extract of table for Manoj"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year --2023\r\n",
					",s.subjectyearlevel as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					"\r\n",
					"-- ,staff.bkstaff \r\n",
					",staff.compasspersonid as TeacherID\r\n",
					"-- ,staff.firstname as TeacherFirstName\r\n",
					"-- ,staff.lastname as TeacherLastName\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					"\r\n",
					"\r\n",
					"-- ,d.bkstudent\r\n",
					",d.compasspersonid as StudentID\r\n",
					"-- ,d.FirstName AS StudentFirstName \r\n",
					"-- ,d.LastName AS StudentLastName\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					"\r\n",
					"-- \r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityCode\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					"-- ,ae.ActivityEnrolmentStartDate\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"\r\n",
					",s.subjectshortname as ClassName\r\n",
					"-- ,s.subjectyearlevel \r\n",
					",a.SubjectCode as ClassID\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"\r\n",
					"where staff.firstname = 'Chloe' and staff.lastname = 'McLaren' and staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where innerquery.Year = 2021\r\n",
					"--and StudentName like '%Choveaux'\r\n",
					"\r\n",
					"--total count = 15739\r\n",
					"--academicyear = 2023 = 966"
				],
				"execution_count": 217
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"dmyearlevel_df = spark.read.load(source3p + \"/pilot/DMYearLevel_pseudo\", format='delta')\r\n",
					"\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')"
				],
				"execution_count": 210
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmyearlevel"
				],
				"execution_count": 215
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct govcode1 from vw_CompassODSStudentDemographic limit 10;"
				],
				"execution_count": 209
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"#dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"#dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"#dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# stage 3\r\n",
					"dmyearlevel_df = spark.read.load(source3p + \"/pilot/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(source3p + \"/pilot/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(source3p + \"/pilot/DMDate_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(source3p + \"/pilot/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for naplan and acer participation view\r\n",
					"factstudentenrolmentcounts_df = spark.read.load(sourcep + \"/enrolment/DMFactStudentEnrolmentCounts_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"# stage 3 naplan and acer participation view\r\n",
					"factnaplanstudentyearresult_df = spark.read.load(source3p + \"/pilot/DMFactNaplanStudentYearResult_pseudo\", format='delta')\r\n",
					"factpatresults_df = spark.read.load(source3p + \"/pilot/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Learning Task\r\n",
					"ae_manuallearningtasks_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Semester Report\r\n",
					"ae_manualsemesterreports_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for ODS tables (+ dmcampus_df already added above)\r\n",
					"odsactivity_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivity_pseudo\", format='delta')\r\n",
					"odsactivityenrolment_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivityEnrolment_pseudo\", format='delta')\r\n",
					"odscompasssubject_df = spark.read.load(sourcep + \"/_ODS/CompassODSCompassSubject_pseudo\", format='delta')\r\n",
					"odsstaffdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffDemographic_pseudo\", format='delta')\r\n",
					"odsstudentdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')\r\n",
					"\r\n",
					"factstudentenrolmentcounts_df.createOrReplaceTempView('vw_factstudentenrolmentcounts')\r\n",
					"factnaplanstudentyearresult_df.createOrReplaceTempView('vw_factnaplanstudentyearresult')\r\n",
					"factpatresults_df.createOrReplaceTempView('vw_factpatresults_df')\r\n",
					"\r\n",
					"ae_manuallearningtasks_df.createOrReplaceTempView('vw_aemanuallearningtasks')\r\n",
					"ae_manualsemesterreports_df.createOrReplaceTempView('vw_aemanualsemesterreports')\r\n",
					"\r\n",
					"odsactivity_df.createOrReplaceTempView('vw_CompassODSActivity') \r\n",
					"odsactivityenrolment_df.createOrReplaceTempView('vw_CompassODSActivityEnrolment') \r\n",
					"odscompasssubject_df.createOrReplaceTempView('vw_CompassODSCompassSubject') \r\n",
					"odsstaffdemographic_df.createOrReplaceTempView('vw_CompassODSStaffDemographic') \r\n",
					"odsstudentdemographic_df.createOrReplaceTempView('vw_CompassODSStudentDemographic') "
				],
				"execution_count": 72
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus limit 5"
				],
				"execution_count": 249
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"dmcampus_original_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"dmcampus_original_df.createOrReplaceTempView('vw_dmcampus_original')"
				],
				"execution_count": 250
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select CompassSchoolURL from vw_dmcampus_original limit 5"
				],
				"execution_count": 252
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 274
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent limit 5"
				],
				"execution_count": 219
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select * from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year --2023\r\n",
					"-- ,s.subjectyearlevel as YearLevel\r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					"\r\n",
					"-- ,staff.bkstaff \r\n",
					",staff.compasspersonid as TeacherID\r\n",
					"-- ,staff.firstname as TeacherFirstName\r\n",
					"-- ,staff.lastname as TeacherLastName\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					"\r\n",
					"\r\n",
					"-- ,d.bkstudent\r\n",
					",d.compasspersonid as StudentID\r\n",
					"-- ,d.FirstName AS StudentFirstName \r\n",
					"-- ,d.LastName AS StudentLastName\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					"\r\n",
					"-- \r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityCode\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					",ae.ActivityEnrolmentStartDate ----------------- if there are duplicates, need to get the latest/highest value?\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"\r\n",
					",s.subjectshortname as ClassName\r\n",
					"-- ,s.subjectyearlevel \r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,d.govcode1 as ceiderfromstudent\r\n",
					"-- ,active.ceider\r\n",
					"-- ,active.SKYearLevel\r\n",
					"-- ,yl.yearlevelsifcode\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where staff.firstname = 'Chloe' and staff.lastname = 'McLaren' and staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where innerquery.Year = 2021\r\n",
					"--and innerquery.yearlevel in ('P', '1', '2')\r\n",
					"and StudentName like '%Choveaux'\r\n",
					"\r\n",
					"--total count = 15739\r\n",
					"--academicyear = 2023 = 966"
				],
				"execution_count": 239
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmyearlevel"
				],
				"execution_count": 235
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--Year, YearLevel, CampusID, SchoolName, TeacherID, Teacher name, StudentID, Student Name, Class name/ID\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate)\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year --2023\r\n",
					"-- ,s.subjectyearlevel as YearLevel\r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					"\r\n",
					"-- ,staff.bkstaff \r\n",
					",staff.compasspersonid as TeacherID\r\n",
					"-- ,staff.firstname as TeacherFirstName\r\n",
					"-- ,staff.lastname as TeacherLastName\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					"\r\n",
					"\r\n",
					"-- ,d.bkstudent\r\n",
					",d.compasspersonid as StudentID\r\n",
					"-- ,d.FirstName AS StudentFirstName \r\n",
					"-- ,d.LastName AS StudentLastName\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					"\r\n",
					"-- \r\n",
					"-- ,a.ActivityName\r\n",
					"-- ,a.ActivityCode\r\n",
					"-- ,a.ActivityTypeDescription\r\n",
					"-- ,a.CampusId AS AGEID\r\n",
					"-- ,a.ManagingCompassPersonId \r\n",
					",ae.ActivityEnrolmentStartDate ----------------- if there are duplicates, need to get the latest/highest value?\r\n",
					"-- ,ae.ActivityEnrolmentEndDate\r\n",
					"\r\n",
					",s.subjectshortname as ClassName\r\n",
					"-- ,s.subjectyearlevel \r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,d.govcode1 as ceiderfromstudent\r\n",
					"-- ,active.ceider\r\n",
					"-- ,active.SKYearLevel\r\n",
					"-- ,yl.yearlevelsifcode\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"-- staff.firstname = 'Chloe' and staff.lastname = 'McLaren' and \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"--StudentName like '%Choveaux'\r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					"\r\n",
					"--total count = 15739\r\n",
					"--academicyear = 2023 = 966"
				],
				"execution_count": 246
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_learningtasks\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"concat('LT',row_number() OVER (ORDER BY ceider)) as idcolumn,\r\n",
					"m.School_Name\r\n",
					",m.Area\r\n",
					",m.Semester\r\n",
					",m.Year\r\n",
					",m.SubjectName\r\n",
					",m.Code\r\n",
					",m.TeacherImportIdentifier\r\n",
					",m.TaskId\r\n",
					",m.IsSubjectWide\r\n",
					",m.TaskName\r\n",
					",m.StudentCode\r\n",
					",m.GovtCode1\r\n",
					",m.StudentLastName\r\n",
					",m.StudentFirstName\r\n",
					",m.YearLevel\r\n",
					"--,case when m.YearLevel is null then m.YearLevel else concat('Year ' , cast(m.YearLevel as string)) end\r\n",
					",m.ResultType\r\n",
					",m.PrimaryGrade\r\n",
					",m.CommentTimestamp\r\n",
					",m.CommentPosterCode\r\n",
					",m.CommentPosterName\r\n",
					",m.Result\r\n",
					",m.ComponentName\r\n",
					",m.ComponentType\r\n",
					",m.IsIncludedInReport\r\n",
					",m.ReportCycleName\r\n",
					",m.DueDate\r\n",
					",m.Category\r\n",
					",m.SubmissionStatus\r\n",
					",m.ReceiptTime\r\n",
					",m.BKID\r\n",
					",innerquery.ceider\r\n",
					",innerquery.schoolid\r\n",
					",innerquery.skcampus\r\n",
					"from vw_aemanuallearningtasks m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype, b.skcampus, b.skyearlevel,  c.schoolname, c.area, c.schoolid, d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"        and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = lower(innerquery.firstname)\r\n",
					"and lower(m.studentlastname) = lower(innerquery.lastname)\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"--and trim(m.yearlevel) = trim(innerquery.yearlevelsifcode)\r\n",
					"and trim(case when m.YearLevel is null then -1 else m.YearLevel end) = trim(innerquery.yearlevelsifcode)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N')"
				],
				"execution_count": 21
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select idcolumn from vw_ae_manual_learningtasks where idcolumn = 'LT18518'"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ae_manual_learningtasks"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ae_manual_semesterreports\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"concat('SR',row_number() OVER (ORDER BY ceider)) as idcolumn,\r\n",
					"m.* \r\n",
					", innerquery.ceider\r\n",
					", innerquery.schoolid\r\n",
					", innerquery.skcampus\r\n",
					"from vw_aemanualsemesterreports m\r\n",
					"\r\n",
					"left join \r\n",
					"(\r\n",
					"    select a.ceider, a.firstname, a.lastname, a.persontype\r\n",
					"    ,b.skcampus\r\n",
					"    ,c.schoolname, c.area, c.schoolid\r\n",
					"    ,b.skyearlevel \r\n",
					"    ,d.yearlevelsifdesc, d.businessdesc, d.yearlevelsifcode\r\n",
					"    --, concat(lower(a.firstname), lower(a.lastname), lower(c.schoolname), lower(d.businessdesc)) as joinkey\r\n",
					"    from vw_dmpersondemographic a \r\n",
					"    left join vw_factpersonmilestone b on a.ceider = b.ceider\r\n",
					"    left join vw_dmcampus c on b.skcampus = c.skcampus\r\n",
					"    left join vw_dmyearlevel d on b.skyearlevel = d.skyearlevel\r\n",
					"    where a.persontype = 'Student'\r\n",
					"         and b.iscurrentmilestone = 'True'\r\n",
					") innerquery\r\n",
					"\r\n",
					"on lower(m.studentfirstname) = trim(lower(innerquery.firstname))\r\n",
					"and lower(m.studentlastname) = trim(lower(innerquery.lastname))\r\n",
					"and lower(m.school_name) = lower(innerquery.schoolname)\r\n",
					"and lower(m.area) = lower(innerquery.area)\r\n",
					"and trim(lower(m.studentyearlevel)) = trim(lower(innerquery.yearlevelsifdesc))\r\n",
					"\r\n",
					"\r\n",
					"where m.result in ('A', 'A+', 'A-', 'B', 'B+', 'B-', 'C', 'C+', 'C-', 'D', 'D+', 'D-', 'E', 'E+', 'N') "
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ae_manual_semesterreports\r\n",
					"where idcolumn = 'SR18049'"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select count(*) from \r\n",
					"\r\n",
					"CREATE TEMP VIEW vw_ae_manual_combined\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"concat('LT',row_number() OVER (ORDER BY ceider)) as id\r\n",
					", School_Name\r\n",
					", Area\r\n",
					", Semester\r\n",
					", Year\r\n",
					", trim(substring(subjectname, 3)) as SubjectName \r\n",
					", code as ClassCode\r\n",
					", StudentCode\r\n",
					", GovtCode1\r\n",
					", StudentFirstName\r\n",
					", initcap(studentlastname) as StudentLastName\r\n",
					", CASE\r\n",
					"    WHEN yearlevel is not null THEN concat('Year ', yearlevel)\r\n",
					"    ELSE yearlevel\r\n",
					"        END as YearLevel\r\n",
					", ResultType\r\n",
					", CASE\r\n",
					"    WHEN result = 'A+' THEN 'A'\r\n",
					"    WHEN result = 'A-' THEN 'A'\r\n",
					"    WHEN result = 'B+' THEN 'B'\r\n",
					"    WHEN result = 'B-' THEN 'B'\r\n",
					"    WHEN result = 'C+' THEN 'C'\r\n",
					"    WHEN result = 'C-' THEN 'C'\r\n",
					"    WHEN result = 'D+' THEN 'D'\r\n",
					"    WHEN result = 'D-' THEN 'D'\r\n",
					"    WHEN result = 'E+' THEN 'E'\r\n",
					"    ELSE result\r\n",
					"        END as Result\r\n",
					", BKID\r\n",
					", ceider \r\n",
					", schoolid\r\n",
					", skcampus\r\n",
					"\r\n",
					"from vw_ae_manual_learningtasks \r\n",
					"\r\n",
					"\r\n",
					"union \r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"concat('SR',row_number() OVER (ORDER BY ceider)) as id\r\n",
					", School_Name\r\n",
					", Area\r\n",
					", Semester\r\n",
					", Year\r\n",
					", subject as SubjectName \r\n",
					", ClassCode\r\n",
					", StudentCode\r\n",
					", GovtCode1\r\n",
					", StudentFirstName\r\n",
					", StudentLastName\r\n",
					", StudentYearLevel\r\n",
					", AssessmentType as ResultType\r\n",
					", Result\r\n",
					", BKID\r\n",
					", ceider \r\n",
					", schoolid\r\n",
					", skcampus\r\n",
					"\r\n",
					"from vw_ae_manual_semesterreports "
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(distinct id) from vw_ae_manual_combined"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"as\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					") mainquery"
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents"
				],
				"execution_count": 39
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_email2\r\n",
					"as\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					") mainquery"
				],
				"execution_count": 43
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_email"
				],
				"execution_count": 42
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_email2"
				],
				"execution_count": 44
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_email2 limit 5"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"as\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					") mainquery"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffDemographic \r\n",
					"where firstname = 'Tegan' and lastname = 'Beckham';\r\n",
					"\r\n",
					"--Tegan Beckham"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_acerparticipation\r\n",
					"as\r\n",
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\tskcampus\r\n",
					"\t\t\t\t\t\t, skyear\r\n",
					"\t\t\t\t\t\t, SKDate\r\n",
					"\t\t\t\t\t\t, skyearlevel\r\n",
					"\t\t\t\t\t\t, SKACERStudent\r\n",
					"\t\t\t\t\t\t, count(distinct skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df\r\n",
					"\t\t\t\t\t\t\tgroup by skcampus, skyear, skdate, skyearlevel, SKACERStudent --9\r\n",
					"\t\t\t) innerinner\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus and a.skyear = innerquery.skyear and a.skdate = innerquery.skdate and a.skyearlevel = innerquery.skyearlevel \r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus, a.skyear, a.skdate, a.skyearlevel, innerquery.count_of_tests\r\n",
					") wholequery"
				],
				"execution_count": 323
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"--Taking skcampus = 1898 and skyear = 92 and skyearlevel = 10 as an example, \r\n",
					"--the 3 dates in ACER are 11th, 13th and 28th of October, none of which will join onto the 31st of October enrolment data. "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_acerparticipation\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 324
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct e.skdate, dt.date from vw_factstudentenrolmentcounts e\r\n",
					"left join vw_dmdate dt on e.skdate = dt.skdate\r\n",
					"where e.skcampus = 1898 and e.skyear = 92 and e.skyearlevel = 10\r\n",
					"order by dt.date"
				],
				"execution_count": 341
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct acer.skdate, dt.date from vw_factpatresults_df acer\r\n",
					"left join vw_dmdate dt on acer.skdate = dt.skdate\r\n",
					"where acer.skcampus = 1898 and acer.skyear = 92 and acer.skyearlevel = 10\r\n",
					"order by dt.date"
				],
				"execution_count": 342
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Code below gives the breakdown, can filter out the nulls But of the 3 dates, which one to use? Bringing in all the dates will give duplicate information?"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmdate limit 5"
				],
				"execution_count": 344
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, datedetails.monthnumberofyear\r\n",
					"\t--, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join vw_dmdate datedetails\r\n",
					"on a.skdate = datedetails.skdate\r\n",
					"\r\n",
					"\r\n",
					"left join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear, a.skdate, a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear, innerinner.skdate, innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus \r\n",
					"and a.skyear = innerquery.skyear \r\n",
					"--and a.skdate = innerquery.skdate \r\n",
					"and a.skyearlevel = innerquery.skyearlevel \r\n",
					"and datedetails.monthnumberofyear = innerquery.monthnumberofyear\r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus\r\n",
					", a.skyear\r\n",
					", datedetails.monthnumberofyear\r\n",
					"--, a.skdate\r\n",
					", a.skyearlevel\r\n",
					", innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 346
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select innerinner.skcampus, innerinner.skyear\r\n",
					"--, innerinner.skdate\r\n",
					", innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear\r\n",
					", sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t--, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear\r\n",
					"                            --, a.skdate\r\n",
					"                            , a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear\r\n",
					"    --, innerinner.skdate\r\n",
					"    , innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear"
				],
				"execution_count": 349
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--, round(cast(count_of_tests as float) / (cast(#students_enrolled as float) * 2), 2) as participation_perc \r\n",
					", round(count_of_tests /(students_enrolled  * 2), 2) as participation_perc \r\n",
					"from\r\n",
					"(\r\n",
					"select \r\n",
					"\t--*\r\n",
					"\ta.skcampus\r\n",
					"\t, a.skyear\r\n",
					"\t, datedetails.monthnumberofyear\r\n",
					"\t--, a.skdate\r\n",
					"\t, a.skyearlevel\r\n",
					"\t, sum(studentcount) as students_enrolled\r\n",
					"\t, innerquery.count_of_tests \r\n",
					"from vw_factstudentenrolmentcounts a\r\n",
					"\r\n",
					"left join vw_dmdate datedetails\r\n",
					"on a.skdate = datedetails.skdate\r\n",
					"\r\n",
					"\r\n",
					"inner join \r\n",
					"\t(\t\r\n",
					"\t\tselect innerinner.skcampus, innerinner.skyear\r\n",
					"        --, innerinner.skdate\r\n",
					"        , innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear, sum(acer_tests) as count_of_tests from \r\n",
					"\t\t\t(\r\n",
					"\t\t\t\tselect \r\n",
					"\t\t\t\t\t\ta.skcampus\r\n",
					"\t\t\t\t\t\t, a.skyear\r\n",
					"\t\t\t\t\t\t--, a.SKDate\r\n",
					"\t\t\t\t\t\t, a.skyearlevel\r\n",
					"\t\t\t\t\t\t, a.SKACERStudent\r\n",
					"                        , b.year \r\n",
					"                        , b.monthnumberofyear\r\n",
					"\t\t\t\t\t\t, count(distinct a.skpattest) as acer_tests\r\n",
					"\t\t\t\t\t\tfrom vw_factpatresults_df a\r\n",
					"                        left join vw_dmdate b\r\n",
					"                        on a.skdate = b.skdate\r\n",
					"\t\t\t\t\t\t\tgroup by a.skcampus, a.skyear\r\n",
					"                            --, a.skdate\r\n",
					"                            , a.skyearlevel, a.SKACERStudent, b.year, b.monthnumberofyear --9\r\n",
					"\t\t\t) innerinner\r\n",
					"            where innerinner.skcampus = 1898 and innerinner.skyear = 92 and innerinner.skyearlevel = 10\r\n",
					"\tgroup by innerinner.skcampus, innerinner.skyear\r\n",
					"    --, innerinner.skdate\r\n",
					"    , innerinner.SKYearLevel, innerinner.year, innerinner.monthnumberofyear\r\n",
					"\t) innerquery\r\n",
					"\r\n",
					"on a.skcampus = innerquery.skcampus \r\n",
					"and a.skyear = innerquery.skyear \r\n",
					"--and a.skdate = innerquery.skdate \r\n",
					"and a.skyearlevel = innerquery.skyearlevel \r\n",
					"and datedetails.monthnumberofyear = innerquery.monthnumberofyear\r\n",
					"where a.skyearlevel in (21, 11, 10, 2, 16, 12, 20, 3, 17) --ACER - year levels 2 to 10\r\n",
					"group by a.skcampus\r\n",
					", a.skyear\r\n",
					", datedetails.monthnumberofyear\r\n",
					"--, a.skdate\r\n",
					", a.skyearlevel\r\n",
					", innerquery.count_of_tests\r\n",
					") wholequery\r\n",
					"where skcampus = 1898 and skyear = 92 and skyearlevel = 10"
				],
				"execution_count": 351
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffDemographic limit 5"
				],
				"execution_count": 340
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select govcode1 from vw_CompassODSStudentDemographic limit 10"
				],
				"execution_count": 336
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffDemographic limit 5"
				],
				"execution_count": 73
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# setup the temp tables we need\r\n",
					"sourcep = oea.stage2p\r\n",
					"source3p = oea.stage3p\r\n",
					"\r\n",
					"# used for classenrolment view\r\n",
					"factsubjectenrolment_df = spark.read.load(sourcep + \"/enrolment/DMFactSubjectEnrolment_pseudo\", format='delta')\r\n",
					"dmactivity_df = spark.read.load(sourcep + \"/enrolment/DMActivity_pseudo\", format='delta')\r\n",
					"dmsubject_df = spark.read.load(sourcep + \"/enrolment/DMSubject_pseudo\", format='delta')\r\n",
					"#dmpersondemographic_df = spark.read.load(sourcep + \"/student/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"#dmyearlevel_df = spark.read.load(sourcep + \"/ACER/DMYearLevel_pseudo\", format='delta')\r\n",
					"#dmcampus_df = spark.read.load(sourcep + \"/ACER/DMCampus_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"dmcalendaryear_df = spark.read.load(sourcep + \"/ACER/DMCalendarYear_pseudo\", format='delta')\r\n",
					"\r\n",
					"# stage 3\r\n",
					"dmyearlevel_df = spark.read.load(source3p + \"/pilot/DMYearLevel_pseudo\", format='delta')\r\n",
					"dmcampus_df = spark.read.load(source3p + \"/pilot/DMCampus_pseudo\", format='delta')\r\n",
					"dmdate_df = spark.read.load(source3p + \"/pilot/DMDate_pseudo\", format='delta')\r\n",
					"dmpersondemographic_df = spark.read.load(source3p + \"/pilot/DMPersonDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for active student view\r\n",
					"factpersonmilestone_df = spark.read.load(sourcep + \"/student/DMFactPersonMilestone_pseudo\", format='delta')\r\n",
					"dmrollgroup_df = spark.read.load(sourcep + \"/enrolment/DMRollGroup_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for naplan and acer participation view\r\n",
					"factstudentenrolmentcounts_df = spark.read.load(sourcep + \"/enrolment/DMFactStudentEnrolmentCounts_pseudo\", format='delta')\r\n",
					"#dmdate_df = spark.read.load(sourcep + \"/ACER/DMDate_pseudo\", format='delta')\r\n",
					"# stage 3 naplan and acer participation view\r\n",
					"factnaplanstudentyearresult_df = spark.read.load(source3p + \"/pilot/DMFactNaplanStudentYearResult_pseudo\", format='delta')\r\n",
					"factpatresults_df = spark.read.load(source3p + \"/pilot/DMFactPATResults_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Learning Task\r\n",
					"ae_manuallearningtasks_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualLearningTasks_pseudo\", format='delta')\r\n",
					"\r\n",
					"# used for manual AE Semester Report\r\n",
					"ae_manualsemesterreports_df = spark.read.load(sourcep + \"/_AE_ManualUploadRawFiles/AE_ManualSemesterReports_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# used for ODS tables (+ dmcampus_df already added above)\r\n",
					"odsactivity_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivity_pseudo\", format='delta')\r\n",
					"odsactivityenrolment_df = spark.read.load(sourcep + \"/_ODS/CompassODSActivityEnrolment_pseudo\", format='delta')\r\n",
					"odscompasssubject_df = spark.read.load(sourcep + \"/_ODS/CompassODSCompassSubject_pseudo\", format='delta')\r\n",
					"odsstaffdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffDemographic_pseudo\", format='delta')\r\n",
					"odsstudentdemographic_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentDemographic_pseudo\", format='delta')\r\n",
					"\r\n",
					"odsstafforganisationdetails_df = spark.read.load(sourcep + \"/_ODS/CompassODSStaffOrganisationDetails_pseudo\", format='delta')\r\n",
					"odsstudentorganisationdetails_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentOrganisationDetails_pseudo\", format='delta')\r\n",
					"\r\n",
					"odsstudentorganisationmilestones_df = spark.read.load(sourcep + \"/_ODS/CompassODSStudentOrganisationMilestones_pseudo\", format='delta')\r\n",
					"\r\n",
					"\r\n",
					"# create temp sql views\r\n",
					"factsubjectenrolment_df.createOrReplaceTempView('vw_factsubjectenrolment')\r\n",
					"dmactivity_df.createOrReplaceTempView('vw_dmactivity')\r\n",
					"dmsubject_df.createOrReplaceTempView('vw_dmsubject')\r\n",
					"dmpersondemographic_df.createOrReplaceTempView('vw_dmpersondemographic')\r\n",
					"dmyearlevel_df.createOrReplaceTempView('vw_dmyearlevel')\r\n",
					"dmcampus_df.createOrReplaceTempView('vw_dmcampus')\r\n",
					"dmdate_df.createOrReplaceTempView('vw_dmdate')\r\n",
					"dmcalendaryear_df.createOrReplaceTempView('vw_dmcalendaryear')\r\n",
					"factpersonmilestone_df.createOrReplaceTempView('vw_factpersonmilestone')\r\n",
					"dmrollgroup_df.createOrReplaceTempView('vw_dmrollgroup')\r\n",
					"\r\n",
					"factstudentenrolmentcounts_df.createOrReplaceTempView('vw_factstudentenrolmentcounts')\r\n",
					"factnaplanstudentyearresult_df.createOrReplaceTempView('vw_factnaplanstudentyearresult')\r\n",
					"factpatresults_df.createOrReplaceTempView('vw_factpatresults_df')\r\n",
					"\r\n",
					"ae_manuallearningtasks_df.createOrReplaceTempView('vw_aemanuallearningtasks')\r\n",
					"ae_manualsemesterreports_df.createOrReplaceTempView('vw_aemanualsemesterreports')\r\n",
					"\r\n",
					"odsactivity_df.createOrReplaceTempView('vw_CompassODSActivity') \r\n",
					"odsactivityenrolment_df.createOrReplaceTempView('vw_CompassODSActivityEnrolment') \r\n",
					"odscompasssubject_df.createOrReplaceTempView('vw_CompassODSCompassSubject') \r\n",
					"odsstaffdemographic_df.createOrReplaceTempView('vw_CompassODSStaffDemographic') \r\n",
					"odsstudentdemographic_df.createOrReplaceTempView('vw_CompassODSStudentDemographic') \r\n",
					"\r\n",
					"odsstafforganisationdetails_df.createOrReplaceTempView('vw_CompassODSStaffOrganisationDetails') \r\n",
					"odsstudentorganisationdetails_df.createOrReplaceTempView('vw_CompassODSStudentOrganisationDetails') \r\n",
					"\r\n",
					"odsstudentorganisationmilestones_df.createOrReplaceTempView('vw_CompassODSStudentOrganisationMilestones') "
				],
				"execution_count": 347
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           --DATE_ADD(HOUR, 10, MilestoneTimestamp) AS MilestoneStartDate,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       --LEAD(DATE_ADD(HOUR, 10, MilestoneTimestamp)) \r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"    -- WHERE IsCurrent = 1\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					""
				],
				"execution_count": 352
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_studentstable"
				],
				"execution_count": 358
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_studentstable_aa"
				],
				"execution_count": 363
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_studentstable_aa\r\n",
					"-- as\r\n",
					"\r\n",
					"select year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote, count(*) from\r\n",
					"\r\n",
					"(\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					"--,ms.yearlevel as YearLevel\r\n",
					",yearlevel.yearlevel as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"--and year(utcactivityenrolmentstartdate) = year(current_date) ---------------------------------------------------------------added this for 2023\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- LEFT OUTER JOIN (select SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear, count(subjectshortname) from vw_CompassODSCompassSubject\r\n",
					"-- group by SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear) s \r\n",
					"-- ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- left join vw_activestudent active\r\n",
					"-- on active.ceider = d.govcode1\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationMilestones ms\r\n",
					"-- on ms.compasspersonid = d.CompassPersonId\r\n",
					"-- and ms.iscurrent is True \r\n",
					"-- and ms.iscurrentmilestone is True\r\n",
					"\r\n",
					"-- left join vw_dmyearlevel yl\r\n",
					"-- on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"-- CASE\r\n",
					"--     WHEN condition1 THEN result1\r\n",
					"--     WHEN condition2 THEN result2\r\n",
					"--     WHEN conditionN THEN resultN\r\n",
					"--     ELSE result\r\n",
					"-- END;\r\n",
					"\r\n",
					"left join (SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           case when YearLevel = 0 then 'P' else YearLevel end as YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           --DATE_ADD(HOUR, 10, MilestoneTimestamp) AS MilestoneStartDate,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       --LEAD(DATE_ADD(HOUR, 10, MilestoneTimestamp)) \r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"    -- WHERE IsCurrent = 1\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"          --and compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"              ) yearlevel \r\n",
					"        on d.CompassPersonId = yearlevel.compasspersonid\r\n",
					"        and yearlevel.milestoneyear = s.academicyear\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"--year = year(CURRENT_DATE) ---------------------------------------------------------------added this for 2023\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"--and \r\n",
					"--studentname = 'Allira Ackers'\r\n",
					"--and \r\n",
					"--studentname = 'Adaline Airey'\r\n",
					"    --studentname = 'Piper Dawes' or \r\n",
					"-- (studentname = 'Lacie Silver')\r\n",
					"--and \r\n",
					"and year is not null\r\n",
					"-- and classname like '%Generalist%'\r\n",
					"-- )\r\n",
					") wholequery\r\n",
					"\r\n",
					"where yearlevel is not null\r\n",
					"\r\n",
					"group by year\r\n",
					", yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote"
				],
				"execution_count": 381
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select yearlevel, count(*) from vw_CompassODSStudentOrganisationMilestones \r\n",
					"group by yearlevel \r\n",
					"order by yearlevel"
				],
				"execution_count": 382
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT CompassPersonId,\r\n",
					"           CampusId,\r\n",
					"           YearLevel,\r\n",
					"           GroupA,\r\n",
					"           GroupB,\r\n",
					"           GroupC,\r\n",
					"           GroupD,\r\n",
					"           GroupE,\r\n",
					"           IsActive,\r\n",
					"           IsCurrentMilestone,\r\n",
					"           --DATE_ADD(HOUR, 10, MilestoneTimestamp) AS MilestoneStartDate,\r\n",
					"           year(MilestoneTimestamp + INTERVAL 10 HOURS) AS MilestoneYear,\r\n",
					"           MilestoneTimestamp + INTERVAL 10 HOURS AS MilestoneStartDate,\r\n",
					"           COALESCE(\r\n",
					"                       --LEAD(DATE_ADD(HOUR, 10, MilestoneTimestamp)) \r\n",
					"                       LEAD(MilestoneTimestamp + INTERVAL 10 HOURS) \r\n",
					"                                                                            OVER (PARTITION BY CompassPersonId,\r\n",
					"                                                                                      OrganisationName\r\n",
					"                                                                         ORDER BY MilestoneTimestamp,\r\n",
					"                                                                                  HomeCampusGuid\r\n",
					"                                                                        ),\r\n",
					"                       make_date(9999, 12, 31)\r\n",
					"                   ) AS MilestoneFinishDate,\r\n",
					"           OrganisationName\r\n",
					"    FROM vw_CompassODSStudentOrganisationMilestones\r\n",
					"    -- WHERE IsCurrent = 1\r\n",
					"     WHERE IsCurrent is True\r\n",
					"          AND DioceseId = 12\r\n",
					"          and yearlevel is not null\r\n",
					"          and compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'"
				],
				"execution_count": 370
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentstable_aa"
				],
				"execution_count": 365
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_studentstable"
				],
				"execution_count": 360
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 349
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent \r\n",
					"-- where firstname = 'Allira' -- skyearlevel = 14\r\n",
					"where firstname = 'Adaline' and lastname = 'Airey' -- skyearlevel = 14"
				],
				"execution_count": 326
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"as\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					") mainquery"
				],
				"execution_count": 220
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"-- as\r\n",
					"\r\n",
					"select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as staff_login_email\r\n",
					"-- ,studentemails.organisationuseremail as student_login_email\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					")"
				],
				"execution_count": 94
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"-- vw_CompassODSStaffOrganisationDetails\r\n",
					"-- vw_CompassODSStudentOrganisationDetails"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_CompassODSStaffDemographic"
				],
				"execution_count": 101
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_CompassODSStaffOrganisationDetails"
				],
				"execution_count": 106
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_CompassODSStaffOrganisationDetails where iscurrent = 'True'"
				],
				"execution_count": 107
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffOrganisationDetails order by compasspersonid"
				],
				"execution_count": 105
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select iscurrent, count(*) from vw_CompassODSStaffOrganisationDetails\r\n",
					"group by iscurrent"
				],
				"execution_count": 104
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select count(*) from (\r\n",
					"\r\n",
					"select a.*, b.organisationuseremail from vw_CompassODSStaffDemographic a\r\n",
					"left join vw_CompassODSStaffOrganisationDetails b \r\n",
					"on a.CompassPersonId = b.CompassPersonId\r\n",
					"and b.iscurrent = 'True' and b.status = 'Active'\r\n",
					"where a.iscurrent = 'True'\r\n",
					"\r\n",
					"order by compasspersonid\r\n",
					"-- )"
				],
				"execution_count": 125
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(distinct compasspersonid) from vw_CompassODSStaffDemographic\r\n",
					"where iscurrent = 'True'"
				],
				"execution_count": 124
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffDemographic \r\n",
					"where firstname = 'Carmelina' and lastname = 'Murphy' and iscurrent is True\r\n",
					"\r\n",
					""
				],
				"execution_count": 202
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--select * from vw_CompassODSStaffDemographic where compasspersonid = 'b790d6d5-6822-47e8-b95f-ff334c71ceb7' and iscurrent = 'True'\r\n",
					"\r\n",
					"    --00182885-5f66-4613-85fa-eb88d67969a5\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '00182885-5f66-4613-85fa-eb88d67969a5' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '9d46b4bf-7568-44c8-a2c2-181821d3a7da' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '30beb778-8461-46f4-8d1d-b84f87355ec1' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- --Anneka Reynolds\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '1cd57964-bec5-45f1-ae60-b41f0e82406e' and iscurrent = 'True'\r\n",
					"\r\n",
					"--Carmelina Murphy\r\n",
					"select * from vw_CompassODSStaffDemographic where compasspersonid = 'ad178dc7-8dee-4b3e-b42b-a3d25dada387' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- --Michelle Luinys\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '6fe9e2f5-65d4-48fd-9862-dc07a0daa22c' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- --Perri McGill\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = '3b5c4a26-71e7-4289-a09b-318b4de7bb7e' and iscurrent = 'True'\r\n",
					"\r\n",
					"-- --Scott Williamson\r\n",
					"-- select * from vw_CompassODSStaffDemographic where compasspersonid = 'd898d26f-5ab7-4901-b029-4580acf8e885' and iscurrent = 'True'\r\n",
					"    "
				],
				"execution_count": 203
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = 'b790d6d5-6822-47e8-b95f-ff334c71ceb7' and iscurrent = 'True' and status = 'Active'\r\n",
					"\r\n",
					"-- select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = '00182885-5f66-4613-85fa-eb88d67969a5' and iscurrent = 'True' and status = 'Active'\r\n",
					"\r\n",
					"--Anna Bennett - 20 to 40 records\r\n",
					"-- select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = '9d46b4bf-7568-44c8-a2c2-181821d3a7da' and iscurrent = 'True' and status = 'Active'\r\n",
					"\r\n",
					"-- --Catherine Motteram - 9 to 27 records\r\n",
					"-- select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = 'c5f8b64f-a1e2-46a2-bc4c-c898a51f5727' and iscurrent = 'True' and status = 'Active'\r\n",
					"\r\n",
					"-- --Melinda Holmes - 2454 to 7362 records\r\n",
					"-- select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = '30beb778-8461-46f4-8d1d-b84f87355ec1' and iscurrent = 'True' and status = 'Active'\r\n",
					"\r\n",
					"--Carmelina Murphy - irregular one - consider using IsTeachingStaff = True but still there will be duplicate emails\r\n",
					"select * from vw_CompassODSStaffOrganisationDetails where compasspersonid = 'ad178dc7-8dee-4b3e-b42b-a3d25dada387' and iscurrent = 'True' and status = 'Active'"
				],
				"execution_count": 211
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents\r\n",
					"where teacherid = '00182885-5f66-4613-85fa-eb88d67969a5'"
				],
				"execution_count": 132
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select status, count(*) from vw_CompassODSStaffOrganisationDetails group by status"
				],
				"execution_count": 116
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from \r\n",
					"\r\n",
					"(\r\n",
					"select a.*, b.organisationuseremail from vw_CompassODSStaffDemographic a\r\n",
					"inner join vw_CompassODSStaffOrganisationDetails b \r\n",
					"on a.CompassPersonId = b.CompassPersonId\r\n",
					"and b.iscurrent = 'True'\r\n",
					")"
				],
				"execution_count": 109
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from \r\n",
					"\r\n",
					"(\r\n",
					"select a.*, b.organisationuseremail from vw_CompassODSStudentDemographic a\r\n",
					"left join vw_CompassODSStudentOrganisationDetails b \r\n",
					"on a.CompassPersonId = b.CompassPersonId\r\n",
					")"
				],
				"execution_count": 99
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents"
				],
				"execution_count": 137
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_2\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					", student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					", student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as staff_login_email\r\n",
					",studentemails.organisationuseremail as student_login_email\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					", student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 143
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentDemographic where compasspersonid = 'd5625c4f-b9ea-4c36-a3dc-b830d49db505'"
				],
				"execution_count": 142
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select teachername, count(*) from vw_ods_earlyyearsstudents \r\n",
					"group by teachername\r\n",
					"order by teachername "
				],
				"execution_count": 149
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select teachername, count(*) from vw_ods_earlyyearsstudents_2 \r\n",
					"group by teachername\r\n",
					"order by teachername "
				],
				"execution_count": 150
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents where teachername = 'Carmelina Murphy'"
				],
				"execution_count": 174
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_2 where teachername = 'Carmelina Murphy'"
				],
				"execution_count": 175
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"\r\n",
					"select * from vw_CompassODSStudentDemographic where compasspersonid = '64872fa4-b011-4f03-8023-c524895a8b77'"
				],
				"execution_count": 176
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"create temp view temp_carmelina_student as\r\n",
					"select distinct studentid as compasspersonid, studentname from vw_ods_earlyyearsstudents where teachername = 'Carmelina Murphy'"
				],
				"execution_count": 181
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from temp_carmelina_student"
				],
				"execution_count": 189
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from \r\n",
					"\r\n",
					"(\r\n",
					"\r\n",
					"select * from vw_CompassODSStudentOrganisationDetails \r\n",
					"where compasspersonid in \r\n",
					"(select compasspersonid from temp_carmelina_student)\r\n",
					"and iscurrent is True\r\n",
					"and status = 'Active'\r\n",
					")\r\n",
					"\r\n",
					"--2375\r\n",
					"--328 iscurrent is True\r\n",
					"--306 iscurrent is True and status = 'Active'\r\n",
					""
				],
				"execution_count": 187
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"-- as\r\n",
					"\r\n",
					"select count(*) from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"    and staff.compasspersonid = 'ad178dc7-8dee-4b3e-b42b-a3d25dada387'\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					") mainquery\r\n",
					"\r\n",
					")"
				],
				"execution_count": 188
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Investigate what's going on with different counts when not related to the staff email"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents where teachername = 'Carmelina Murphy'\r\n",
					"\r\n",
					"    --all = 620\r\n",
					"    --distinct studentname = 310"
				],
				"execution_count": 191
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select studentname, count(*) from vw_ods_earlyyearsstudents where teachername = 'Carmelina Murphy'\r\n",
					"    group by studentname order by studentname"
				],
				"execution_count": 196
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(distinct studentname) from vw_ods_earlyyearsstudents_2 where teachername = 'Carmelina Murphy'\r\n",
					"\r\n",
					"    --all = 1866\r\n",
					"    --distinct studentname = 310"
				],
				"execution_count": 193
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select studentname, count(*) from vw_ods_earlyyearsstudents_2 where teachername = 'Carmelina Murphy'\r\n",
					"    group by studentname order by studentname"
				],
				"execution_count": 197
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_staffemailonly\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",staff.emailaddress as StaffEmail\r\n",
					",d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as staff_login_email\r\n",
					"-- ,studentemails.organisationuseremail as student_login_email\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- and studentemails.status = 'Active'\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					", staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 198
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_staffemailonly where teachername = 'Carmelina Murphy'"
				],
				"execution_count": 199
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_staffemailonly where teachername = 'Carmelina Murphy'\r\n",
					"    order by studentname"
				],
				"execution_count": 201
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_updated\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 226
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select campusid from vw_CompassODSStaffOrganisationDetails where campusid is not null limit 5"
				],
				"execution_count": 225
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_updated limit 10"
				],
				"execution_count": 213
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select studentname, count(*) from vw_ods_earlyyearsstudents_updated\r\n",
					"where teachername = 'Carmelina Murphy'\r\n",
					"group by studentname\r\n",
					"order by studentname"
				],
				"execution_count": 231
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents\r\n",
					"where teachername = 'Carmelina Murphy'\r\n",
					"and studentname = 'Lucas McLoughlin'"
				],
				"execution_count": 233
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_updated\r\n",
					"where teachername = 'Carmelina Murphy'\r\n",
					"and studentname = 'Lucas McLoughlin'"
				],
				"execution_count": 234
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentDemographic \r\n",
					"where firstname = 'Lucas' and lastname = 'McLoughlin'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 240
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentOrganisationDetails \r\n",
					"where compasspersonid = '7a5505af-23e4-43db-a97c-ad9d965a0027'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 242
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select teachername, count(*) from vw_ods_earlyyearsstudents_updated\r\n",
					"group by teachername\r\n",
					"order by teachername"
				],
				"execution_count": 229
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_updated2\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 243
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_updated2"
				],
				"execution_count": 244
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct teachername from vw_ods_earlyyearsstudents_updated2\r\n",
					"where staffemail is null\r\n",
					"order by teachername"
				],
				"execution_count": 247
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffDemographic\r\n",
					"--where firstname = 'Brooke' and lastname = 'Youse'   --8e61bf9d-a22b-4c89-9117-2262ca59f616\r\n",
					"--where firstname = 'Chloe' and lastname = 'McLaren'   --3a3fec1b-d08e-4423-825e-0fdf11fe4af6\r\n",
					"where firstname = 'Trina' and lastname = 'Neilson'   --b82d3985-7131-4540-a697-5a9c4dc04750\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 383
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffOrganisationDetails\r\n",
					"where compasspersonid = 'b82d3985-7131-4540-a697-5a9c4dc04750' \r\n",
					"    and iscurrent is True \r\n",
					"    --and status = 'Active'"
				],
				"execution_count": 387
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select organisationuseremail, count(*) from vw_CompassODSStaffOrganisationDetails --497903\r\n",
					"\r\n",
					"where organisationuseremail not like '%catholic.edu.au%' --299185\r\n",
					"and iscurrent is True and status = 'Active'\r\n",
					"    group by organisationuseremail"
				],
				"execution_count": 397
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_updated3\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"--and staffemails.status = 'Active'\r\n",
					"and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"--and studentemails.status = 'Active'\r\n",
					"and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 253
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_updated3"
				],
				"execution_count": 275
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_updated3"
				],
				"execution_count": 255
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct teachername, staffemail from vw_ods_earlyyearsstudents_updated3\r\n",
					"where staffemail is null"
				],
				"execution_count": 257
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, campusid\r\n",
					" from vw_CompassODSStaffDemographic\r\n",
					"where firstname = 'Chloe' and lastname = 'McLaren'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 285
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--* \r\n",
					"compasspersonid, organisationuseremail, campusid\r\n",
					"from vw_CompassODSStaffOrganisationDetails\r\n",
					"where compasspersonid = '3a3fec1b-d08e-4423-825e-0fdf11fe4af6' \r\n",
					"    --and iscurrent is True"
				],
				"execution_count": 308
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct studentname, studentemail from vw_ods_earlyyearsstudents_updated3\r\n",
					"where studentemail is null"
				],
				"execution_count": 267
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentDemographic\r\n",
					"where firstname = 'Oscar' and lastname = 'Ohl'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 268
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = '62d96e8b-2f1d-4ba3-8e40-91b295f9b60a' \r\n",
					"    and iscurrent is True"
				],
				"execution_count": 269
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_updated4"
				],
				"execution_count": 272
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_updated4\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"--and staffemails.status = 'Active'\r\n",
					"and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"--and studentemails.iscurrent is True\r\n",
					"--and studentemails.status = 'Active'\r\n",
					"and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- )"
				],
				"execution_count": 273
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_updated4"
				],
				"execution_count": 274
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, campusid, govcode1\r\n",
					" from vw_CompassODSStudentDemographic\r\n",
					"where firstname = 'Jarrod' and lastname = 'Camer'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 352
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Investigation into alternative for factstudentenrolmentcounts"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_factstudentenrolmentcounts \r\n",
					"limit 5\r\n",
					"--everything is iscurrent = True"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSActivityEnrolment limit 5"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select campusid, subjectcode, count(*) from vw_CompassODSActivityEnrolment\r\n",
					"where iscurrent is True\r\n",
					"group by campusid, subjectcode\r\n",
					"order by campusid, subjectcode\r\n",
					"\r\n",
					"-- need skyear, skdate"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSStaffOrganisationDetails"
				],
				"execution_count": 380
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_activestudent\r\n",
					"AS\r\n",
					"SELECT SchoolID AS SchoolAGEID,\r\n",
					"    c.CampusSuburbAndName,\r\n",
					"    pd.FirstName,\r\n",
					"    pd.LastName,\r\n",
					"    yl.SKYearLevel,\r\n",
					"    rg.RollGroupDesc AS RollGroup,\r\n",
					"    pd.Ceider,\r\n",
					"    pd.SKPerson, \r\n",
					"    pd.Disability,\r\n",
					"    pd.ATSIId,\r\n",
					"    pd.LBOTE\r\n",
					"\r\n",
					"FROM vw_factpersonmilestone f\r\n",
					"JOIN vw_dmpersondemographic pd ON f.SKPerson = pd.SKPerson\r\n",
					"JOIN vw_dmcampus c ON f.SKCampus = c.SKCampus\r\n",
					"JOIN vw_dmyearlevel yl ON f.SKYearLevel = yl.SKYearLevel\r\n",
					"JOIN vw_dmrollgroup rg ON f.SKRollGroup = rg.SKRollGroup\r\n",
					"WHERE \r\n",
					"    f.IsCurrentMilestone = 'True'\r\n",
					"    AND f.IsActiveMilestone = 'True'\r\n",
					"    AND pd.PersonType = 'Student'\r\n",
					"ORDER BY SchoolAGEID, yl.YearLevelSifDesc, pd.FirstName, pd.LastName\r\n",
					""
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_beth_hall_3"
				],
				"execution_count": 453
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall_3"
				],
				"execution_count": 455
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_beth_hall_3"
				],
				"execution_count": 456
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_beth_hall_3\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"--inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2023\r\n",
					"and teachername = 'Beth Hall'\r\n",
					"-- )"
				],
				"execution_count": 454
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall"
				],
				"execution_count": 437
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall_2"
				],
				"execution_count": 446
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_beth_hall_2"
				],
				"execution_count": 447
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents \r\n",
					"where year = year(CURRENT_DATE)"
				],
				"execution_count": 402
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Missing student emails"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStaffDemographic \r\n",
					"--where firstname = 'Amy' and lastname = 'Butterworth'   --8dce31c1-296e-40d5-8290-7bc435991776\r\n",
					"--where firstname = 'Anne' and lastname = 'Roberts'   --d14ae7b3-ddfd-4795-be94-2cacfe5995f6 (campusid 467) -- this pops studentemails\r\n",
					"where firstname = 'Beth' and lastname = 'Hall'   --29a5c67a-af3b-457c-b166-440caebdaabd (campusid 624) -- this DOESN'T pops studentemails\r\n",
					"--and iscurrent is True"
				],
				"execution_count": 494
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status  from vw_CompassODSStaffOrganisationDetails\r\n",
					"where compasspersonid = '29a5c67a-af3b-457c-b166-440caebdaabd'\r\n",
					"    and iscurrent is True\r\n",
					"    and status = 'Active'"
				],
				"execution_count": 495
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--* \r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStudentDemographic \r\n",
					"--where firstname = 'Abigail' and lastname = 'Long'   --8dce31c1-296e-40d5-8290-7bc435991776\r\n",
					"where firstname = 'Aliyah' and lastname = 'Beetham'   --13e9600d-4022-4370-baaf-85beb2669770\r\n",
					" --where firstname = 'Eva-Jane' and lastname = 'Hicks'   --8ef3ef5b-c77a-4d31-8f5e-4a3a26f9ae70\r\n",
					"  \r\n",
					"--and iscurrent is True"
				],
				"execution_count": 496
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = '13e9600d-4022-4370-baaf-85beb2669770'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 497
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_beth_hall_2"
				],
				"execution_count": 506
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_beth_hall_2\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"--inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"    and staffemails.campusid = 8770 ------------------- REMEMBER TO COMMENT THIS OUT\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2023\r\n",
					"and teachername = 'Beth Hall'\r\n",
					"-- )"
				],
				"execution_count": 507
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall_2"
				],
				"execution_count": 508
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall_2 \r\n",
					"--where studentemail is null\r\n",
					"--where studentname = 'Aliyah Beetham'\r\n",
					"    where studentemail is null\r\n",
					"--order by studentname"
				],
				"execution_count": 526
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--* \r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStudentDemographic \r\n",
					"--where firstname = 'Angus' and lastname = 'Galvin'   --a0ae9bd7-5c71-4a6a-9d1d-81262a90b02f\r\n",
					"-- where firstname = 'Isla' and lastname = 'Hildebrandt'   --b5747966-f600-483d-a3fb-2f09784ef40e\r\n",
					"where firstname = 'Maddison' and lastname = 'McBow'   --dcdbdc6b-d555-42d9-b53a-917c50182bb9"
				],
				"execution_count": 522
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status  from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = 'dcdbdc6b-d555-42d9-b53a-917c50182bb9'\r\n",
					"    and iscurrent is True\r\n",
					"    --and status = 'Active'"
				],
				"execution_count": 523
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_beth_hall_4\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"-- left join vw_dmcampus c \r\n",
					"-- --ON staff.CampusId = c.bkCampusId\r\n",
					"-- ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2023\r\n",
					"and teachername = 'Beth Hall'\r\n",
					"-- )"
				],
				"execution_count": 527
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_beth_hall_4"
				],
				"execution_count": 530
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_beth_hall_4\r\n",
					"where studentemail is null"
				],
				"execution_count": 529
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStaffDemographic \r\n",
					"where firstname = 'Amy' and lastname = 'Butterworth'   --8dce31c1-296e-40d5-8290-7bc435991776\r\n",
					"--where firstname = 'Anne' and lastname = 'Roberts'   --d14ae7b3-ddfd-4795-be94-2cacfe5995f6 (campusid 467) -- this pops studentemails\r\n",
					"--where firstname = 'Beth' and lastname = 'Hall'   --29a5c67a-af3b-457c-b166-440caebdaabd (campusid 624) -- this DOESN'T pops studentemails\r\n",
					"--and iscurrent is True"
				],
				"execution_count": 457
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status  from vw_CompassODSStaffOrganisationDetails\r\n",
					"where compasspersonid = '55bcece4-6c8a-4c63-8fe6-2a73148d76db'\r\n",
					"    and iscurrent is True\r\n",
					"    --and status = 'Active'"
				],
				"execution_count": 476
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--* \r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStudentDemographic \r\n",
					"where firstname = 'Abigail' and lastname = 'Long'   --8dce31c1-296e-40d5-8290-7bc435991776\r\n",
					"--where firstname = 'Aliyah' and lastname = 'Beetham'   --13e9600d-4022-4370-baaf-85beb2669770\r\n",
					" --where firstname = 'Eva-Jane' and lastname = 'Hicks'   --8ef3ef5b-c77a-4d31-8f5e-4a3a26f9ae70\r\n",
					"  \r\n",
					"--and iscurrent is True"
				],
				"execution_count": 459
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = '8dce31c1-296e-40d5-8290-7bc435991776'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 477
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_amy_butterworth_3\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					",staff.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staff.CampusId = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"--inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2023\r\n",
					"and teachername = 'Amy Butterworth'\r\n",
					"-- )"
				],
				"execution_count": 468
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_amy_butterworth\r\n",
					"\r\n",
					"--original count = 491"
				],
				"execution_count": 462
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_amy_butterworth_2\r\n",
					"\r\n",
					"--after new logic = 491 to 470\r\n",
					"\r\n",
					""
				],
				"execution_count": 467
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_amy_butterworth_3\r\n",
					"where studentemail is null\r\n",
					"order by studentname"
				],
				"execution_count": 473
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--* \r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStudentDemographic \r\n",
					"--where firstname = 'Hudson' and lastname = 'Griffin'   --4be94b16-93fb-421c-a302-f01d1a922038\r\n",
					"--where firstname = 'Oliver' and lastname = 'Benson'   --1cae795e-fb74-4bf9-99cf-b6dee0d57e35\r\n",
					"--where firstname = 'Ryan' and lastname = 'Garufi'   --bf707bcb-87c7-4e9b-803f-5c9800ca65f9\r\n",
					"\r\n",
					"where firstname = 'Ivy' and lastname = 'Bray'   --bf707bcb-87c7-4e9b-803f-5c9800ca65f9"
				],
				"execution_count": 535
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = '23c6cd8a-b924-45ec-a4a9-232c36cffdab'\r\n",
					"    --and iscurrent is True"
				],
				"execution_count": 537
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_amy_butterworth_4\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"-- left join vw_dmcampus c \r\n",
					"-- --ON staff.CampusId = c.bkCampusId\r\n",
					"-- ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2023\r\n",
					"and teachername = 'Amy Butterworth'\r\n",
					"-- )"
				],
				"execution_count": 490
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select count(*) from vw_ods_earlyyearsstudents_amy_butterworth_4"
				],
				"execution_count": 534
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct campusid from vw_ods_earlyyearsstudents_amy_butterworth_4\r\n",
					""
				],
				"execution_count": 533
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStaffDemographic \r\n",
					"--where firstname = 'Scott' and lastname = 'Williamson'   --d898d26f-5ab7-4901-b029-4580acf8e885\r\n",
					"-- where firstname = 'Steven' and lastname = 'Pascoe'   --fd403994-5699-4090-8958-1a544fb4c360\r\n",
					"where firstname = 'Perri' and lastname = 'McGill'   --3b5c4a26-71e7-4289-a09b-318b4de7bb7e\r\n",
					"--and iscurrent is True"
				],
				"execution_count": 543
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStaffOrganisationDetails\r\n",
					"where compasspersonid = '3b5c4a26-71e7-4289-a09b-318b4de7bb7e'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 544
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus\r\n",
					"where bkcampusid = 2529"
				],
				"execution_count": 547
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_checkteachers\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"-- left join vw_dmcampus c \r\n",
					"-- --ON staff.CampusId = c.bkCampusId\r\n",
					"-- ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"--where year = year(CURRENT_DATE)\r\n",
					"-- )"
				],
				"execution_count": 548
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select distinct year, teachername from vw_ods_earlyyearsstudents_checkteachers\r\n",
					"where staffemail is null\r\n",
					"order by teachername"
				],
				"execution_count": 550
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, firstname, lastname, govcode1, iscurrent, campusid  from vw_CompassODSStudentDemographic \r\n",
					"\r\n",
					"where firstname = 'Shae' and lastname = 'Scalia'\r\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"--*\r\n",
					"compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStudentOrganisationDetails \r\n",
					"\r\n",
					"where compasspersonid = 'b9b56d05-270b-4155-805a-fbef23d03f92'"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent\r\n",
					"where firstname = 'Shae' and lastname = 'Scalia'"
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# example df\r\n",
					"data = [(\"Diocese of Townsville CEO\",2022, \"SCAT\", 5422, \"Burdekin Catholic High School (Ayr)\", 60, \"Accounting\", \"GENERAL\", \"CAMER\", \"JARROD ANDREW\"),\r\n",
					"        (\"Diocese of Townsville CEO\",2022, \"SCAT\", 5422, \"Burdekin Catholic High School (Ayr)\", 6400, \"Agricultural Practices\", \"APPLIED\", \"SCALIA\", \"SHAE\"),\r\n",
					"        (\"Diocese of Townsville CEO\",2022, \"SCAT\", 5422, \"Burdekin Catholic High School (Ayr)\", 20, \"Ancient History\", \"GENERAL\", \"SITTON\", \"STELLA MARIA\"),\r\n",
					"        (\"Diocese of Townsville CEO\",2022, \"SCAT\", 5422, \"Burdekin Catholic High School (Ayr)\", 42, \"Biology\", \"GENERAL\", \"BIFFANTI\", \"DANICA JEAN\"),\r\n",
					"        (\"Diocese of Townsville CEO\",2022, \"SCAT\", 5422, \"Burdekin Catholic High School (Ayr)\", 6099, \"Career Education\", \"SHORT_COURSES\", \"ALEXANDER\", \"KADANCE JOY\")\r\n",
					"        ]\r\n",
					"\r\n",
					"columns = [\"CSA\",\"exit_year\",\"qcaa_org_type\", \"centre_code\", \"school\", \"subject_id\", \"subject\", \"subject_type\", \"lastname\", \"givennames\"]\r\n",
					"df = spark.createDataFrame(data = data, schema = columns)\r\n",
					"\r\n",
					"df.createOrReplaceTempView('vw_seniordata')"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_seniordata"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select sd.lastname, sd.givennames, split(sd.givennames, ' ')[0] as firstname, split(sd.givennames, ' ')[1] as middlename\r\n",
					", studentdemo.firstname, studentdemo.middlename, studentdemo.lastname, studentdemo.govcode1\r\n",
					", sd.school, studentdemo.campusid, camp.bkcampusid, camp.schoolname, concat(camp.schoolname, ' (', camp.area, ')') as schoolnameandarea\r\n",
					"from vw_seniordata sd\r\n",
					"left join vw_CompassODSStudentDemographic studentdemo\r\n",
					"on lower(split(sd.givennames, ' ')[0]) = lower(studentdemo.firstname) \r\n",
					"--and lower(split(sd.givennames, ' ')[1]) = lower(studentdemo.middlename) -- See the Shae Scalia example - missing middle name in the Senior Data\r\n",
					"and lower(sd.lastname) = lower(studentdemo.lastname)\r\n",
					"and studentdemo.iscurrent is True\r\n",
					"\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus camp\r\n",
					"on studentdemo.campusid = camp.bkcampusid\r\n",
					"and concat(trim(camp.schoolname), ' (', camp.area, ')') = trim(sd.school)\r\n",
					"\r\n",
					"--split(A,'\\\\.')[0] "
				],
				"execution_count": 70
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT firstname, middlename, lastname, govcode1, campusid FROM vw_CompassODSStudentDemographic \r\n",
					"where firstname = 'Shae' and lastname = 'Scalia'"
				],
				"execution_count": 64
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmcampus \r\n",
					"where schoolname like '%Burdekin%'"
				],
				"execution_count": 60
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"* \r\n",
					"--compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStudentDemographic\r\n",
					"\r\n",
					"where firstname = 'Allira' and lastname = 'Ackers'   --ceb1e6d0-2cdc-49cf-8a07-4bc701841504\r\n",
					"and iscurrent is True\r\n",
					""
				],
				"execution_count": 75
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStudentOrganisationDetails\r\n",
					"where compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 73
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents\r\n",
					"where studentname = 'Allira Ackers'\r\n",
					"    order by classname, teachername"
				],
				"execution_count": 77
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff -------------------------------------------- staff demo table\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a   -------------------------------------------- activity table\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae  -------------------------------------------- activity enrolment table\r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d  -------------------------------------------- student demo table\r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s  -------------------------------------------- subject table\r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active -------------------------------------------- active students table\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl  -------------------------------------------- year level table\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails -------------------------------------------- staff emails table\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails -------------------------------------------- student emails table\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = year(CURRENT_DATE)\r\n",
					"-- )"
				],
				"execution_count": 76
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject\r\n",
					"where \r\n",
					"--academicyear = 2023\r\n",
					"--and subjectshortname = 'English Prep - Year 1' \r\n",
					" subjectshortname = 'Year 1 Generalist' --GEN1"
				],
				"execution_count": 105
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"* \r\n",
					"--compasspersonid, firstname, lastname, campusid, iscurrent \r\n",
					"from vw_CompassODSStaffDemographic\r\n",
					"\r\n",
					"--where firstname = 'Natalie' and lastname = 'Parsons'   --96b5af58-488f-4a4e-8181-08b03dd68775\r\n",
					"where firstname = 'Kerry' and lastname = 'Rudman'   --8c4b0fd5-1803-40c7-a350-522f09a9a2d9\r\n",
					"and iscurrent is True"
				],
				"execution_count": 80
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select compasspersonid, organisationuseremail, iscurrent, campusid, status from vw_CompassODSStaffOrganisationDetails\r\n",
					"--where compasspersonid = '96b5af58-488f-4a4e-8181-08b03dd68775' -- Natalie Parsons - campus 2529 Active\r\n",
					"where compasspersonid = '8c4b0fd5-1803-40c7-a350-522f09a9a2d9' -- Kerry Rudman - campus 2529 Active\r\n",
					"    and iscurrent is True"
				],
				"execution_count": 84
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff -------------------------------------------- staff demo table\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a   -------------------------------------------- activity table\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae  -------------------------------------------- activity enrolment table\r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d  -------------------------------------------- student demo table\r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s  -------------------------------------------- subject table\r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active -------------------------------------------- active students table\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl  -------------------------------------------- year level table\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails -------------------------------------------- staff emails table\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails -------------------------------------------- student emails table\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"    --and staff.compasspersonid in ('96b5af58-488f-4a4e-8181-08b03dd68775', '8c4b0fd5-1803-40c7-a350-522f09a9a2d9')\r\n",
					"    and staff.compasspersonid = '8c4b0fd5-1803-40c7-a350-522f09a9a2d9' --Kerry Rudman\r\n",
					"    and s.academicyear = 2023\r\n",
					"    and yl.yearlevelsifcode = 'P'\r\n",
					"        and concat(d.FirstName,' ',d.LastName) = 'Allira Ackers'\r\n",
					"\r\n",
					"order by concat(staff.FirstName,' ',staff.LastName), s.subjectshortname, ae.ActivityEnrolmentStartDate \r\n",
					""
				],
				"execution_count": 108
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent \r\n",
					"where firstname = 'Allira' and lastname = 'Ackers' --skyearlevel = 6"
				],
				"execution_count": 106
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmyearlevel"
				],
				"execution_count": 94
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"*\r\n",
					"--max(createdate), max(lastupdatedate), max(effectivestartdate) \r\n",
					"from vw_factpersonmilestone \r\n",
					"where skperson = 778420"
				],
				"execution_count": 100
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmpersondemographic \r\n",
					"where firstname = 'Allira' and lastname = 'Ackers'\r\n",
					"limit 3"
				],
				"execution_count": 99
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"SELECT\r\n",
					"-- s.academicyear as Year \r\n",
					"-- ,yl.yearlevelsifcode as YearLevel\r\n",
					"-- ,staffemails.campusid as CampusID\r\n",
					"-- ,c.schoolname as SchoolName\r\n",
					"--,\r\n",
					"staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					"-- ,d.compasspersonid as StudentID\r\n",
					"-- ,concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					"-- ,ae.ActivityEnrolmentStartDate \r\n",
					"-- ,s.subjectshortname as ClassName\r\n",
					"-- ,a.SubjectCode as ClassID\r\n",
					"-- ,d.govcode1 as ceider\r\n",
					"-- ,staffemails.organisationuseremail as StaffEmail\r\n",
					"-- ,studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff -------------------------------------------- staff demo table\r\n",
					"\r\n",
					"-- inner join vw_CompassODSActivity a   -------------------------------------------- activity table\r\n",
					"-- ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"-- AND a.iscurrent is True\r\n",
					"\r\n",
					"-- inner JOIN vw_CompassODSActivityEnrolment ae  -------------------------------------------- activity enrolment table\r\n",
					"-- ON ae.ActivityCode = a.ActivityCode\r\n",
					"-- AND ae.CampusId = a.CampusId\r\n",
					"-- AND ae.IsCurrent is True\r\n",
					"\r\n",
					"-- inner JOIN vw_CompassODSStudentDemographic d  -------------------------------------------- student demo table\r\n",
					"-- ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"-- AND d.iscurrent is True\r\n",
					"\r\n",
					"-- LEFT OUTER JOIN vw_CompassODSCompassSubject s  -------------------------------------------- subject table\r\n",
					"-- ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- left join vw_activestudent active -------------------------------------------- active students table\r\n",
					"-- on active.ceider = d.govcode1\r\n",
					"\r\n",
					"-- left join vw_dmyearlevel yl  -------------------------------------------- year level table\r\n",
					"-- on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails -------------------------------------------- staff emails table\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- and staffemails.status = 'Active'\r\n",
					"-- --and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- --left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- inner join vw_CompassODSStudentOrganisationDetails studentemails -------------------------------------------- student emails table\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- and studentemails.status = 'Active'\r\n",
					"-- --and staff.campusid = studentemails.campusid\r\n",
					"-- and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"-- left join vw_dmcampus c \r\n",
					"-- --ON staff.CampusId = c.bkCampusId\r\n",
					"-- ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"    --and staff.compasspersonid in ('96b5af58-488f-4a4e-8181-08b03dd68775', '8c4b0fd5-1803-40c7-a350-522f09a9a2d9')\r\n",
					"    and staff.compasspersonid = '8c4b0fd5-1803-40c7-a350-522f09a9a2d9' --Kerry Rudman\r\n",
					"--     and s.academicyear = 2023\r\n",
					"--     and yl.yearlevelsifcode = 'P'\r\n",
					"--         and concat(d.FirstName,' ',d.LastName) = 'Allira Ackers'\r\n",
					"\r\n",
					"-- order by concat(staff.FirstName,' ',staff.LastName), s.subjectshortname, ae.ActivityEnrolmentStartDate \r\n",
					""
				],
				"execution_count": 110
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject\r\n",
					"where subjectshortname = 'Prep Generalist' and campusid = 2529\r\n",
					"and iscurrent is True"
				],
				"execution_count": 140
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"-- staff.*\r\n",
					"staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",staff.campusid as staffdemocampusid\r\n",
					",a.ManagingCompassPersonId\r\n",
					",a.bkactivity\r\n",
					",a.activityname\r\n",
					",a.subjectcode\r\n",
					",a.activitycode\r\n",
					"-- ,ae.activitycode\r\n",
					"-- ,ae.campusid\r\n",
					"-- ,ae.CompassPersonId\r\n",
					"-- ,ae.currentlyenrolled\r\n",
					"-- ,ae.createdate \r\n",
					"-- ,ae.lastupdatedate \r\n",
					"-- ,ae.effectivestartdate \r\n",
					"-- ,ae.effectiveenddate\r\n",
					",ae.*\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a   -------------------------------------------- activity table\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae  -------------------------------------------- activity enrolment table\r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"\r\n",
					"WHERE\r\n",
					"staff.iscurrent is TRUE\r\n",
					"--and staff.compasspersonid = '8c4b0fd5-1803-40c7-a350-522f09a9a2d9' --Kerry Rudman\r\n",
					"--and staff.compasspersonid in ('96b5af58-488f-4a4e-8181-08b03dd68775', '8c4b0fd5-1803-40c7-a350-522f09a9a2d9')\r\n",
					"and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"    and ae.currentlyenrolled is True"
				],
				"execution_count": 136
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--need to take only the max dates from this table\r\n",
					"select * from vw_CompassODSActivityEnrolment \r\n",
					"where compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"and currentlyenrolled is True\r\n",
					"    order by activitycode, activityname, subjectcode\r\n",
					"\r\n",
					"    --total = 38\r\n",
					"    --after dedupe = ?"
				],
				"execution_count": 132
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##### **Subjects that Allira Ackers is enrolled in - for discussion**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--check what subjects Allira Ackers is enrolled in\r\n",
					"\r\n",
					"select * from vw_CompassODSActivityEnrolment\r\n",
					"where compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"    and iscurrent is True\r\n",
					"    --and subjectcode = 'GENP'\r\n",
					"        and year(utcactivityenrolmentstartdate) = year(current_date)\r\n",
					"\r\n",
					"    --order by activitycode\r\n",
					"    order by subjectcode"
				],
				"execution_count": 157
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select year(startdatetime) as usethisdate, * from vw_CompassODSActivity\r\n",
					"where managingcompasspersonid = '8c4b0fd5-1803-40c7-a350-522f09a9a2d9'\r\n",
					"    --order by subjectcode\r\n",
					"    order by startdatetime desc"
				],
				"execution_count": 156
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject\r\n",
					"where subjectimportidentifier = 'GENP'\r\n",
					"    and iscurrent is True \r\n",
					"    and campusid = 2529"
				],
				"execution_count": 161
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- CREATE TEMP VIEW vw_ods_earlyyearsstudents\r\n",
					"-- as\r\n",
					"\r\n",
					"-- select count(*) from (\r\n",
					"\r\n",
					"--For year 2023\r\n",
					"\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					"--, YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					"-- , staff_login_email\r\n",
					"-- , student_login_email\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"-- select \r\n",
					"-- year\r\n",
					"-- --, YearLevel\r\n",
					"-- , CampusID\r\n",
					"-- , SchoolName\r\n",
					"-- , TeacherID\r\n",
					"-- , TeacherName\r\n",
					"-- , StudentID \r\n",
					"-- , StudentName\r\n",
					"-- , max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					"-- , ClassName\r\n",
					"-- , ClassID\r\n",
					"-- , StaffEmail\r\n",
					"-- , StudentEmail\r\n",
					"-- , ceider\r\n",
					"-- -- , staff_login_email\r\n",
					"-- -- , student_login_email\r\n",
					"-- ,Gender\r\n",
					"-- ,Gendercode\r\n",
					"-- ,Indigenoustype\r\n",
					"-- ,Indigenoustypecode\r\n",
					"-- ,Disability\r\n",
					"-- ,LBOTE\r\n",
					"\r\n",
					"\r\n",
					"--  from \r\n",
					"-- (\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					"-- ,staff.emailaddress as StaffEmail\r\n",
					"-- ,d.emailaddress as StudentEmail\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"-- left join vw_dmcampus c \r\n",
					"-- --ON staff.CampusId = c.bkCampusId\r\n",
					"-- ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"and year(utcactivityenrolmentstartdate) = year(current_date) ---------------------added this?\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- -- --Login emails\r\n",
					"-- left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"-- on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"-- and staffemails.iscurrent is True\r\n",
					"-- --and staffemails.status = 'Active'\r\n",
					"-- and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"-- on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"-- and studentemails.iscurrent is True\r\n",
					"-- --and studentemails.status = 'Active'\r\n",
					"-- and staff.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"-- ) innerquery\r\n",
					"\r\n",
					"-- -- where \r\n",
					"-- -- innerquery.Year >= 2021 \r\n",
					"-- -- and innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"-- group by\r\n",
					"-- year\r\n",
					"-- --, YearLevel\r\n",
					"-- , CampusID\r\n",
					"-- , SchoolName\r\n",
					"-- , TeacherID\r\n",
					"-- , TeacherName\r\n",
					"-- , StudentID \r\n",
					"-- , StudentName\r\n",
					"-- , ClassName\r\n",
					"-- , ClassID\r\n",
					"-- , StaffEmail\r\n",
					"-- , StudentEmail\r\n",
					"-- , ceider\r\n",
					"-- -- , staff_login_email\r\n",
					"-- -- , student_login_email\r\n",
					"-- ,Gender\r\n",
					"-- ,Gendercode\r\n",
					"-- ,Indigenoustype\r\n",
					"-- ,Indigenoustypecode\r\n",
					"-- ,Disability\r\n",
					"-- ,LBOTE\r\n",
					"\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = year(CURRENT_DATE)\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 228
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--ATSIID, GenderID, NCCD and LBOTE\r\n",
					"\r\n",
					"select gender, indigenoustype, disability, lbote from vw_CompassODSStudentDemographic \r\n",
					"--, disabilityfunded, gendercode, indigenoustypecode\r\n",
					"limit 3"
				],
				"execution_count": 221
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select utcactivityenrolmentstartdate from vw_CompassODSActivityEnrolment limit 3\r\n",
					""
				],
				"execution_count": 183
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--for 2022\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",case \r\n",
					"    when yl.yearlevelsifcode = 12 then 11\r\n",
					"    when yl.yearlevelsifcode = 11 then 10\r\n",
					"    when yl.yearlevelsifcode = 10 then 9\r\n",
					"    when yl.yearlevelsifcode = 9 then 8\r\n",
					"    when yl.yearlevelsifcode = 8 then 7\r\n",
					"    when yl.yearlevelsifcode = 7 then 6\r\n",
					"    when yl.yearlevelsifcode = 6 then 5\r\n",
					"    when yl.yearlevelsifcode = 5 then 4\r\n",
					"    when yl.yearlevelsifcode = 4 then 3\r\n",
					"    when yl.yearlevelsifcode = 3 then 2\r\n",
					"    when yl.yearlevelsifcode = 2 then 1\r\n",
					"    when yl.yearlevelsifcode = 1 then 'P'\r\n",
					"    else yl.yearlevelsifcode end as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					",d.Gender\r\n",
					",d.Indigenoustype\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"-- and year(utcactivityenrolmentstartdate) = year(current_date)\r\n",
					"and year(utcactivityenrolmentstartdate) = 2022\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"-- where year = year(CURRENT_DATE)\r\n",
					"where year = 2022\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 227
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--for 2021\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"select \r\n",
					"\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", max(ActivityEnrolmentStartDate) as ActivityEnrolmentStartDate\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"\r\n",
					" from \r\n",
					"(\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					",case \r\n",
					"    when yl.yearlevelsifcode = 12 then 10\r\n",
					"    when yl.yearlevelsifcode = 11 then 9\r\n",
					"    when yl.yearlevelsifcode = 10 then 8\r\n",
					"    when yl.yearlevelsifcode = 9 then 7\r\n",
					"    when yl.yearlevelsifcode = 8 then 6\r\n",
					"    when yl.yearlevelsifcode = 7 then 5\r\n",
					"    when yl.yearlevelsifcode = 6 then 4\r\n",
					"    when yl.yearlevelsifcode = 5 then 3\r\n",
					"    when yl.yearlevelsifcode = 4 then 2\r\n",
					"    when yl.yearlevelsifcode = 3 then 1\r\n",
					"    when yl.yearlevelsifcode = 2 then 'P'\r\n",
					"    when yl.yearlevelsifcode = 1 then '?'\r\n",
					"    else yl.yearlevelsifcode end as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					",d.Gender\r\n",
					",d.Indigenoustype\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"-- and year(utcactivityenrolmentstartdate) = year(current_date)\r\n",
					"and year(utcactivityenrolmentstartdate) = 2021\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					") innerquery\r\n",
					"\r\n",
					"where \r\n",
					"innerquery.Year >= 2021 and\r\n",
					"innerquery.yearlevel in ('P', '1', '2') \r\n",
					"\r\n",
					"group by\r\n",
					"year\r\n",
					", YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Indigenoustype\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = year(CURRENT_DATE)\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 210
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_activestudent \r\n",
					"where firstname = 'Allira' and lastname = 'Ackers'"
				],
				"execution_count": 215
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_dmyearlevel"
				],
				"execution_count": 216
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Clean-up student table"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_2023"
				],
				"execution_count": 276
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--For year 2023\r\n",
					"\r\n",
					"CREATE TEMP VIEW vw_ods_studentstable\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					"--, YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					"-- , ClassName\r\n",
					"-- , ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					"-- ,s.subjectshortname as ClassName\r\n",
					"-- ,a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"--and year(utcactivityenrolmentstartdate) = year(current_date) ---------------------------------------------------------------added this for 2023\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- LEFT OUTER JOIN (select SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear, count(subjectshortname) from vw_CompassODSCompassSubject\r\n",
					"-- group by SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear) s \r\n",
					"-- ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"--year = year(CURRENT_DATE) ---------------------------------------------------------------added this for 2023\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"--and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"(studentname = 'Piper Dawes' or studentname = 'Lacie Silver')\r\n",
					"-- and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 277
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_CompassODSCompassSubject\r\n",
					"limit 2\r\n",
					"--SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear"
				],
				"execution_count": 266
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear, count(subjectshortname) from vw_CompassODSCompassSubject\r\n",
					"group by SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear"
				],
				"execution_count": 257
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_2023\r\n",
					"-- where classname like '%6%'\r\n",
					"--     --Piper Dawes\r\n",
					"--     --Lacie Silver"
				],
				"execution_count": 278
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select year, campusid, schoolname, studentname, ceider, count(*) from vw_ods_earlyyearsstudents_2023\r\n",
					"group by year, campusid, schoolname, studentname, ceider\r\n",
					"order by studentname, year desc"
				],
				"execution_count": 283
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_2022"
				],
				"execution_count": 243
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--For year 2022\r\n",
					"\r\n",
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_2022\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					"--, YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"and year(utcactivityenrolmentstartdate) = 2022 ---------------------------------------------------------------added this for 2022\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2022 ---------------------------------------------------------------added this for 2022\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"-- and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"and (studentname = 'Piper Dawes' or studentname = 'Lacie Silver')\r\n",
					"and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 244
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--For year 2021\r\n",
					"\r\n",
					"CREATE TEMP VIEW vw_ods_earlyyearsstudents_2021\r\n",
					"as\r\n",
					"\r\n",
					"select \r\n",
					"year\r\n",
					"--, YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"and year(utcactivityenrolmentstartdate) = 2021 ---------------------------------------------------------------added this for 2021\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"left join vw_activestudent active\r\n",
					"on active.ceider = d.govcode1\r\n",
					"\r\n",
					"left join vw_dmyearlevel yl\r\n",
					"on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where year = 2021 ---------------------------------------------------------------added this for 2022\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"-- and studentname = 'Allira Ackers'\r\n",
					"--and studentname = 'Adaline Airey'\r\n",
					"and (studentname = 'Piper Dawes' or studentname = 'Lacie Silver')\r\n",
					"and classname like '%Generalist%'\r\n",
					"-- )"
				],
				"execution_count": 246
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"-- select * from vw_ods_earlyyearsstudents_2023\r\n",
					"\r\n",
					"-- union\r\n",
					"\r\n",
					"-- select * from vw_ods_earlyyearsstudents_2022\r\n",
					"\r\n",
					"-- union\r\n",
					"\r\n",
					"-- select * from vw_ods_earlyyearsstudents_2021"
				],
				"execution_count": 247
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"drop view vw_ods_earlyyearsstudents_2023_nulls"
				],
				"execution_count": 289
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"--For year 2023\r\n",
					"\r\n",
					"-- select year, campusid, schoolname, studentname, ceider, count(*) from vw_ods_earlyyearsstudents_2023\r\n",
					"-- group by year, campusid, schoolname, studentname, ceider\r\n",
					"-- order by studentname, year desc\r\n",
					"\r\n",
					"-- CREATE TEMP VIEW vw_ods_earlyyearsstudents_2023_nulls\r\n",
					"-- as\r\n",
					"\r\n",
					"select year\r\n",
					"--, yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote, count(*) from\r\n",
					"\r\n",
					"(\r\n",
					"select \r\n",
					"year\r\n",
					"--, YearLevel\r\n",
					", CampusID\r\n",
					", SchoolName\r\n",
					", TeacherID\r\n",
					", TeacherName\r\n",
					", StudentID \r\n",
					", StudentName\r\n",
					", ClassName\r\n",
					", ClassID\r\n",
					", StaffEmail\r\n",
					", StudentEmail\r\n",
					", ceider\r\n",
					",Gender\r\n",
					",Gendercode\r\n",
					",Indigenoustype\r\n",
					",Indigenoustypecode\r\n",
					",Disability\r\n",
					",LBOTE\r\n",
					"\r\n",
					"from \r\n",
					"(\r\n",
					"\r\n",
					"SELECT\r\n",
					"s.academicyear as Year \r\n",
					"--,yl.yearlevelsifcode as YearLevel\r\n",
					"--,staff.campusid as CampusID\r\n",
					"--,ms.yearlevel as YearLevel\r\n",
					",staffemails.campusid as CampusID\r\n",
					",c.schoolname as SchoolName\r\n",
					",staff.compasspersonid as TeacherID\r\n",
					",concat(staff.FirstName,' ',staff.LastName) AS TeacherName\r\n",
					",d.compasspersonid as StudentID\r\n",
					",concat(d.FirstName,' ',d.LastName) AS StudentName\r\n",
					",ae.ActivityEnrolmentStartDate \r\n",
					",s.subjectshortname as ClassName\r\n",
					",a.SubjectCode as ClassID\r\n",
					",d.govcode1 as ceider\r\n",
					",staffemails.organisationuseremail as StaffEmail\r\n",
					",studentemails.organisationuseremail as StudentEmail\r\n",
					"\r\n",
					",d.Gender\r\n",
					",d.Gendercode\r\n",
					",d.Indigenoustype\r\n",
					",d.Indigenoustypecode\r\n",
					",d.Disability\r\n",
					",d.LBOTE\r\n",
					"\r\n",
					"from vw_CompassODSStaffDemographic staff\r\n",
					"\r\n",
					"inner join vw_CompassODSActivity a\r\n",
					"ON staff.CompassPersonId = a.ManagingCompassPersonId \r\n",
					"AND a.iscurrent is True\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSActivityEnrolment ae \r\n",
					"ON ae.ActivityCode = a.ActivityCode\r\n",
					"AND ae.CampusId = a.CampusId\r\n",
					"AND ae.IsCurrent is True\r\n",
					"--and year(utcactivityenrolmentstartdate) = year(current_date) ---------------------------------------------------------------added this for 2023\r\n",
					"\r\n",
					"inner JOIN vw_CompassODSStudentDemographic d \r\n",
					"ON d.CompassPersonId = ae.CompassPersonId\r\n",
					"AND d.iscurrent is True\r\n",
					"\r\n",
					"LEFT OUTER JOIN vw_CompassODSCompassSubject s \r\n",
					"ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"AND a.CampusId = s.CampusId\r\n",
					"AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- LEFT OUTER JOIN (select SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear, count(subjectshortname) from vw_CompassODSCompassSubject\r\n",
					"-- group by SubjectImportIdentifier, CampusId, IsCurrent, AcademicYear) s \r\n",
					"-- ON ae.SubjectCode = s.SubjectImportIdentifier\r\n",
					"-- AND a.CampusId = s.CampusId\r\n",
					"-- AND s.IsCurrent is True\r\n",
					"\r\n",
					"-- left join vw_activestudent active\r\n",
					"-- on active.ceider = d.govcode1\r\n",
					"\r\n",
					"-- left join vw_CompassODSStudentOrganisationMilestones ms\r\n",
					"-- on ms.compasspersonid = d.CompassPersonId\r\n",
					"-- and ms.iscurrent is True \r\n",
					"-- and ms.iscurrentmilestone is True\r\n",
					"\r\n",
					"-- left join vw_dmyearlevel yl\r\n",
					"-- on active.SKYearLevel = yl.SKYearLevel\r\n",
					"\r\n",
					"-- --Login emails\r\n",
					"left join vw_CompassODSStaffOrganisationDetails staffemails\r\n",
					"on staff.CompassPersonId = staffemails.CompassPersonId\r\n",
					"and staffemails.iscurrent is True\r\n",
					"and staffemails.status = 'Active'\r\n",
					"--and staff.campusid = staffemails.campusid\r\n",
					"\r\n",
					"--left join vw_CompassODSStudentOrganisationDetails studentemails\r\n",
					"inner join vw_CompassODSStudentOrganisationDetails studentemails ------------using this eliminates the ones where campusid doesn't match\r\n",
					"on d.CompassPersonId = studentemails.CompassPersonId\r\n",
					"and studentemails.iscurrent is True\r\n",
					"and studentemails.status = 'Active'\r\n",
					"--and staff.campusid = studentemails.campusid\r\n",
					"and staffemails.campusid = studentemails.campusid\r\n",
					"\r\n",
					"\r\n",
					"left join vw_dmcampus c \r\n",
					"--ON staff.CampusId = c.bkCampusId\r\n",
					"ON staffemails.campusid = c.bkCampusId\r\n",
					"\r\n",
					"\r\n",
					"where \r\n",
					"    staff.iscurrent is True\r\n",
					"\r\n",
					") mainquery\r\n",
					"\r\n",
					"where \r\n",
					"--year = year(CURRENT_DATE) ---------------------------------------------------------------added this for 2023\r\n",
					"--and ae.compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504' --Allira Ackers\r\n",
					"--and \r\n",
					"--studentname = 'Allira Ackers'\r\n",
					"--and \r\n",
					"--studentname = 'Adaline Airey'\r\n",
					"--(studentname = 'Piper Dawes' or studentname = 'Lacie Silver')\r\n",
					"--and \r\n",
					"year is not null\r\n",
					"-- and classname like '%Generalist%'\r\n",
					"-- )\r\n",
					") wholequery\r\n",
					"\r\n",
					"group by year\r\n",
					"--, yearlevel\r\n",
					", campusid, schoolname, studentname, ceider, gender, gendercode, indigenoustype, indigenoustypecode, disability, lbote"
				],
				"execution_count": 321
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_2023_nulls"
				],
				"execution_count": 291
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select * from vw_ods_earlyyearsstudents_2023_nulls \r\n",
					"where year is null"
				],
				"execution_count": 292
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"select \r\n",
					"yearlevel, iscurrent, isactive, iscurrentmilestone from vw_CompassODSStudentOrganisationMilestones \r\n",
					"where compasspersonid = 'ceb1e6d0-2cdc-49cf-8a07-4bc701841504'\r\n",
					"-- and iscurrent is True \r\n",
					"-- and iscurrentmilestone is True\r\n",
					"--compasspersonid\r\n",
					"--yearlevel\r\n",
					""
				],
				"execution_count": 309
			}
		]
	}
}