{
	"name": "Student_py_test",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark3p1sm",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0445ab1d-26a0-451d-833b-733005360e4d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/09921ef6-5d34-4a25-a233-84ffa9485571/resourceGroups/rg-oea-tceooeadev01/providers/Microsoft.Synapse/workspaces/syn-oea-tceooeadev01/bigDataPools/spark3p1sm",
				"name": "spark3p1sm",
				"type": "Spark",
				"endpoint": "https://syn-oea-tceooeadev01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark3p1sm",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"class Student_test(BaseOEAModule):\r\n",
					"    def __init__(self, source_folder='students', pseudonymize = True):\r\n",
					"        BaseOEAModule.__init__(self, source_folder, pseudonymize)\r\n",
					"        self.schemas['student_test'] = [\r\n",
					"                                        ['SKStudent', 'integer', 'no-op'],\r\n",
					"                                        ['BKSourceStudentId', 'string', 'no-op'],\r\n",
					"                                        ['BKPersistentStudentId', 'integer', 'no-op'],\r\n",
					"                                        ['CampusId', 'integer', 'no-op'],\r\n",
					"                                        ['CampusName', 'string', 'no-op'],\r\n",
					"                                        ['SchoolId', 'integer', 'no-op'],\r\n",
					"                                        ['SchoolName', 'string', 'no-op'],\r\n",
					"                                        ['DioceseId', 'integer', 'no-op'],\r\n",
					"                                        ['DioceseName', 'string', 'no-op'],\r\n",
					"                                        ['VisaSubClassId', 'integer', 'no-op'],\r\n",
					"                                        ['VisaSubClassDesc', 'string', 'no-op'],\r\n",
					"                                        ['VisaIdentificationNumber', 'string', 'no-op'],\r\n",
					"                                        ['VisaExpiryData', 'date', 'no-op'],\r\n",
					"                                        ['VisaEndDate', 'date', 'no-op'],\r\n",
					"                                        ['CitizenshipResidencyStatusId', 'integer', 'no-op'],\r\n",
					"                                        ['CitizenshipResidencyStatusDesc', 'string', 'no-op'],\r\n",
					"                                        ['Boarder', 'integer', 'no-op'],\r\n",
					"                                        ['SingleNameOnly', 'integer', 'no-op'],\r\n",
					"                                        ['OfficialFirstName', 'string', 'no-op'],\r\n",
					"                                        ['PreferredFirstName', 'string', 'no-op'],\r\n",
					"                                        ['OfficialSurname', 'string', 'no-op'],\r\n",
					"                                        ['PreferredSurname', 'string', 'no-op'],\r\n",
					"                                        ['DOB', 'date', 'no-op'],\r\n",
					"                                        ['GenderId', 'integer', 'no-op'],\r\n",
					"                                        ['GenderSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['BirthCountryId', 'integer', 'no-op'],\r\n",
					"                                        ['BirthCountrySifDesc', 'string', 'no-op'],\r\n",
					"                                        ['PrimaryCitizenshipCountryId', 'integer', 'no-op'],\r\n",
					"                                        ['PrimaryCitizenshipCountrySifDesc', 'string', 'no-op'],\r\n",
					"                                        ['PrimaryPassportIssueCountryId', 'integer', 'no-op'],\r\n",
					"                                        ['PrimaryPassportIssueCountrySifDesc', 'string', 'no-op'],\r\n",
					"                                        ['AttendanceStatusId', 'integer', 'no-op'],\r\n",
					"                                        ['AttendanceStatusSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['RollGroup', 'string', 'no-op'],\r\n",
					"                                        ['FFPOS', 'integer', 'no-op'],\r\n",
					"                                        ['ESLYesNo', 'integer', 'no-op'],\r\n",
					"                                        ['EslLanguageId', 'integer', 'no-op'],\r\n",
					"                                        ['ESLLanguageSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['LBOTEYesNo', 'integer', 'no-op'],\r\n",
					"                                        ['LBOTELanguageId', 'integer', 'no-op'],\r\n",
					"                                        ['LBOTELanguageSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['AtsiId', 'integer', 'no-op'],\r\n",
					"                                        ['ATSIDesc', 'string', 'no-op'],\r\n",
					"                                        ['ReligionId', 'integer', 'no-op'],\r\n",
					"                                        ['ReligionDesc', 'string', 'no-op'],\r\n",
					"                                        ['SWDYesNo', 'integer', 'no-op'],\r\n",
					"                                        ['SwdId', 'integer', 'no-op'],\r\n",
					"                                        ['SwdSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['StudentAddressStreet', 'string', 'no-op'],\r\n",
					"                                        ['StudentAddressSuburb', 'string', 'no-op'],\r\n",
					"                                        ['StudentAddressPostCode', 'string', 'no-op'],\r\n",
					"                                        ['BKStudentAddressState', 'integer', 'no-op'],\r\n",
					"                                        ['StudentAddressState', 'string', 'no-op'],\r\n",
					"                                        ['StudentAddressGeoData', 'string', 'no-op'],\r\n",
					"                                        ['StudentAddressLongitude', 'double', 'no-op'], #changed 'decimal' to 'double' (float doesn't work)\r\n",
					"                                        ['StudentAddressLatitude', 'double', 'no-op'], #changed 'decimal' to 'double' (float doesn't work)\r\n",
					"                                        ['HomePhone', 'string', 'no-op'],\r\n",
					"                                        ['HomeEmail', 'string', 'no-op'],\r\n",
					"                                        ['StudentMobile', 'string', 'no-op'],\r\n",
					"                                        ['StudentEmail', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1FirstName', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1Surname', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1Phone', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1Mobile', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1Email', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1OccupationalGroupId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian1OccupationalGroupSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1EducationSchoolLevelId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian1EducationSchoolLevelSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1EducationNonSchoolLevelId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian1EducationNonSchoolLevelSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian1LanguageId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian1LanguageSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2FirstName', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2Surname', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2Phone', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2Mobile', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2Email', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2OccupationalGroupId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian2OccupationalGroupSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2EducationSchoolLevelId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian2EducationSchoolLevelSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2EducationNonSchoolLevelId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian2EducationNonSchoolLevelSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['Guardian2LanguageId', 'integer', 'no-op'],\r\n",
					"                                        ['Guardian2LanguageSifDesc', 'string', 'no-op'],\r\n",
					"                                        ['BaptismDate', 'date', 'no-op'],\r\n",
					"                                        ['FirstReconciliationDate', 'date', 'no-op'],\r\n",
					"                                        ['FirstEucharistDate', 'date', 'no-op'],\r\n",
					"                                        ['ConfirmationDate', 'date', 'no-op'],\r\n",
					"                                        ['BaptismParish', 'string', 'no-op'],\r\n",
					"                                        ['CreateDate', 'timestamp', 'no-op'], #changed 'string' to 'timestamp'\r\n",
					"                                        ['EffectiveStartDate', 'string', 'no-op'],\r\n",
					"                                        ['EffectiveEndDate', 'string', 'no-op'],\r\n",
					"                                        ['IsCurrent', 'integer', 'no-op'],\r\n",
					"                                        ['ScdReason', 'string', 'no-op'],\r\n",
					"                                        ['LastUpdateDate', 'string', 'no-op'],\r\n",
					"                                        ['MainCampusId', 'integer', 'no-op'],\r\n",
					"                                        ['OrganisationUserId', 'integer', 'no-op'],\r\n",
					"                                        ['SKPerson', 'integer', 'no-op'],\r\n",
					"                                        ['StudentReportingId', 'string', 'no-op'],\r\n",
					"                                        ['AccessRestrictions_YN', 'string', 'no-op'],\r\n",
					"                                        ['AccessRestrictionsInt', 'integer', 'no-op']\r\n",
					"                                        ]                                          \r\n",
					"\r\n",
					"    def ingest(self):\r\n",
					"        oea.ingest_incremental_data(self.source_folder, 'student_test_file', self.schemas['student_test'], 'LastUpdateDate', 'SKStudent') # try to partition by LastUpdateDate instead of CreateDate\r\n",
					"\r\n",
					"        #oea.ingest_incremental_data(self.source_folder, 'student', self.schemas['student'], 'name', 'id')\r\n",
					"        #oea.ingest_snapshot_data(self.source_folder, 'studentsectionmark', self.schemas['studentsectionmark'], 'school_year', 'id')\r\n",
					"        #oea.ingest_delta_data(self.source_folder, 'studentdemographics', self.schemas['studentdemographics'], 'school_year', 'id')\r\n",
					"\r\n",
					"student_test = Student_test()"
				],
				"execution_count": 1
			}
		]
	}
}